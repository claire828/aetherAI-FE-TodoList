{
    "pipes": [],
    "interfaces": [
        {
            "name": "Chainable",
            "id": "interface-Chainable-b6e9301679b069102687493994a3122422a3dea59a6bb5f4b58676da1e9a175bb9c7bdee3819c19204f96aedd2c7d74185e2d27f555e6378d9fdbe3224e09aa1",
            "file": "apps/skeleton-e2e/src/support/commands.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable<Subject> {\n    login(email: string, password: string): void;\n  }\n}\n\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 173,
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": []
        },
        {
            "name": "Chainable",
            "id": "interface-Chainable-b6e9301679b069102687493994a3122422a3dea59a6bb5f4b58676da1e9a175bb9c7bdee3819c19204f96aedd2c7d74185e2d27f555e6378d9fdbe3224e09aa1-1",
            "file": "apps/todolist-e2e/src/support/commands.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable<Subject> {\n    login(email: string, password: string): void;\n  }\n}\n\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 173,
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Chainable-1"
        },
        {
            "name": "ColorStyle",
            "id": "interface-ColorStyle-2ba1416d56fa77ba790ce87d5f554965af6ccb15b159e2a2a5689665d35cf677c83f9ce799e972151b5a2d953d6f223b4f7fa2a8a383b5c30448c8a72e2c0e91",
            "file": "libs/web/uis/src/lib/utils/color.util.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Color, COLORS } from '../styles';\n\ntype ColorStyleMapperType = {\n  [K in Color]: ColorStyle\n};\n\nexport interface ColorStyle {\n  borderColor: string;\n  bg: string;\n  hoverBg: string;\n  hoverBorder: string;\n}\n\n\nconst ColorStyleMapper: ColorStyleMapperType = COLORS.reduce((acc, key) => {\n  acc[key as Color] = {\n    borderColor: `border-${key}-500`,\n    bg: `bg-${key}-500`,\n    hoverBg: `hover:bg-${key}-700`,\n    hoverBorder: `hover:border-${key}-500`,\n  };\n  return acc;\n}, {} as ColorStyleMapperType);\n\n\n\nexport function colorTransform(color: Color): ColorStyle {\n  return ColorStyleMapper[color];\n};\n",
            "properties": [
                {
                    "name": "bg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "borderColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "hoverBg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "hoverBorder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DefaultDialogConfig",
            "id": "interface-DefaultDialogConfig-0565914ea37ca698700efdc0dfaee6a5ed5cc5be3540bc88b7a37ae9aaad358b90ab9f493690911412985420b4009300072f50af44699412980823b692db384a",
            "file": "libs/web/features/dialog/src/lib/models/dialog-config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ComponentType } from '@angular/cdk/portal';\nimport { OverlayConfig } from '@angular/cdk/overlay';\nimport { DialogEvent } from './dialog-event.enum';\nimport { ClassType } from 'shared';\n\n/**\n * Configuration interface for a dialog component.\n *\n * @template T - The type of the component.\n * @template D - The type of the data passed to the component.\n */\nexport interface DialogComponentConfig<T = unknown, D = unknown> {\n  injectorID: string;\n  componentRef: () => ComponentType<T>;\n  overlayConfig: OverlayConfig;\n  autoClose?: boolean;\n  data?: D;\n}\n\n\nexport interface DefaultDialogConfig {\n  injectorID: string;\n  title: string;\n  content?: string;\n  contentComponent?: () => ComponentType<any>;\n  contentClasses: ClassType;\n  btns: DialogBtnSetting[],\n  overlayConfig: OverlayConfig;\n  autoClose?: boolean;\n};\n\n\nexport interface DialogBtnSetting {\n  type: DialogEvent;\n  displayName: string;\n  classes?: ClassType;\n}\n\n\n/**\n * Represents the configuration type for a dialog.\n * It can be either a `DialogComponentConfig` or a `DefaultDialogConfig`.\n */\nexport type DialogType = DialogComponentConfig | DefaultDialogConfig;\n",
            "properties": [
                {
                    "name": "autoClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "btns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogBtnSetting[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "contentClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClassType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "contentComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "injectorID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "overlayConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OverlayConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DialogBtnSetting",
            "id": "interface-DialogBtnSetting-0565914ea37ca698700efdc0dfaee6a5ed5cc5be3540bc88b7a37ae9aaad358b90ab9f493690911412985420b4009300072f50af44699412980823b692db384a",
            "file": "libs/web/features/dialog/src/lib/models/dialog-config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ComponentType } from '@angular/cdk/portal';\nimport { OverlayConfig } from '@angular/cdk/overlay';\nimport { DialogEvent } from './dialog-event.enum';\nimport { ClassType } from 'shared';\n\n/**\n * Configuration interface for a dialog component.\n *\n * @template T - The type of the component.\n * @template D - The type of the data passed to the component.\n */\nexport interface DialogComponentConfig<T = unknown, D = unknown> {\n  injectorID: string;\n  componentRef: () => ComponentType<T>;\n  overlayConfig: OverlayConfig;\n  autoClose?: boolean;\n  data?: D;\n}\n\n\nexport interface DefaultDialogConfig {\n  injectorID: string;\n  title: string;\n  content?: string;\n  contentComponent?: () => ComponentType<any>;\n  contentClasses: ClassType;\n  btns: DialogBtnSetting[],\n  overlayConfig: OverlayConfig;\n  autoClose?: boolean;\n};\n\n\nexport interface DialogBtnSetting {\n  type: DialogEvent;\n  displayName: string;\n  classes?: ClassType;\n}\n\n\n/**\n * Represents the configuration type for a dialog.\n * It can be either a `DialogComponentConfig` or a `DefaultDialogConfig`.\n */\nexport type DialogType = DialogComponentConfig | DefaultDialogConfig;\n",
            "properties": [
                {
                    "name": "classes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClassType",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DialogComponentConfig",
            "id": "interface-DialogComponentConfig-0565914ea37ca698700efdc0dfaee6a5ed5cc5be3540bc88b7a37ae9aaad358b90ab9f493690911412985420b4009300072f50af44699412980823b692db384a",
            "file": "libs/web/features/dialog/src/lib/models/dialog-config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ComponentType } from '@angular/cdk/portal';\nimport { OverlayConfig } from '@angular/cdk/overlay';\nimport { DialogEvent } from './dialog-event.enum';\nimport { ClassType } from 'shared';\n\n/**\n * Configuration interface for a dialog component.\n *\n * @template T - The type of the component.\n * @template D - The type of the data passed to the component.\n */\nexport interface DialogComponentConfig<T = unknown, D = unknown> {\n  injectorID: string;\n  componentRef: () => ComponentType<T>;\n  overlayConfig: OverlayConfig;\n  autoClose?: boolean;\n  data?: D;\n}\n\n\nexport interface DefaultDialogConfig {\n  injectorID: string;\n  title: string;\n  content?: string;\n  contentComponent?: () => ComponentType<any>;\n  contentClasses: ClassType;\n  btns: DialogBtnSetting[],\n  overlayConfig: OverlayConfig;\n  autoClose?: boolean;\n};\n\n\nexport interface DialogBtnSetting {\n  type: DialogEvent;\n  displayName: string;\n  classes?: ClassType;\n}\n\n\n/**\n * Represents the configuration type for a dialog.\n * It can be either a `DialogComponentConfig` or a `DefaultDialogConfig`.\n */\nexport type DialogType = DialogComponentConfig | DefaultDialogConfig;\n",
            "properties": [
                {
                    "name": "autoClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "D",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "injectorID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "overlayConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OverlayConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Configuration interface for a dialog component.</p>\n",
            "rawdescription": "\n\nConfiguration interface for a dialog component.\n\n",
            "methods": [],
            "extends": []
        },
        {
            "name": "TaskEntity",
            "id": "interface-TaskEntity-d6024fbe863c16b55beaa5826397b3ae76417639d0b6b2eba0de6fb5f4a1edfbfbd946552a3ea2986ad3cf823e2d60fd3fa6c5874de130022fe8c56f2f68a07c",
            "file": "libs/lib-todolist/src/stores/models/task.entity.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TaskEntity {\n  id: string;\n  name: string;\n  completed: boolean;\n  ts: string; // createdAt timestamp\n}\n",
            "properties": [
                {
                    "name": "completed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TaskEntity",
            "id": "interface-TaskEntity-d6024fbe863c16b55beaa5826397b3ae76417639d0b6b2eba0de6fb5f4a1edfbfbd946552a3ea2986ad3cf823e2d60fd3fa6c5874de130022fe8c56f2f68a07c-1",
            "file": "libs/stores/todolist-store/src/lib/models/task.entity.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TaskEntity {\n  id: string;\n  name: string;\n  completed: boolean;\n  ts: string; // createdAt timestamp\n}\n",
            "properties": [
                {
                    "name": "completed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TaskEntity-1"
        },
        {
            "name": "TodolistEntityState",
            "id": "interface-TodolistEntityState-d70e955b80e4366f279c97831ef3907c328eb5dd4c779390cae25aa7cfed427845874ad87e1303806460ad78aae3ca68372a73f6174141991cc87ce24314ce38",
            "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TaskEntity } from \"../models\";\nimport { EntityState } from '@ngrx/entity';\n\nexport interface TodolistEntityState extends EntityState<TaskEntity> {\n  selected: string[];\n}\n\nexport const initialState: TodolistEntityState = {\n  ids: [],\n  entities: {},\n  selected: []\n};\n\n\n",
            "properties": [
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "EntityState"
            ]
        },
        {
            "name": "TodolistState",
            "id": "interface-TodolistState-8aef25512fc33e22c2adec40906a51b95136be8cdb97a0b8ebfc1009e4a683f6884999ae62395655098b2d1ab1481952a0e5f9b8c2fd74790473bbc7c925051f",
            "file": "libs/lib-todolist/src/stores/models/todolist.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TodolistState {\n  selectedIds: string[];\n}\n",
            "properties": [
                {
                    "name": "selectedIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "DialogService",
            "id": "injectable-DialogService-781fd25536854d4a0d8164b2c64942cf0938c6a284378b63382eec751963d6c9dbf829e3f579eb8fbb639df06ea5eb1830e6d142acb254eeb7483356938dcff5",
            "file": "libs/web/features/dialog/src/lib/services/dialog.service.ts",
            "properties": [
                {
                    "name": "#refBuilder",
                    "defaultValue": "createRefBuilder(inject(OverlayPositionBuilder), inject(Overlay))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DecorateRefBuilder",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#refInjector",
                    "defaultValue": "createRefInjector(inject(Injector))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "attachDialog",
                    "args": [
                        {
                            "name": "decorateRef",
                            "type": "DecorateOverlayRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "portal",
                            "type": "ComponentPortal<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DecorateOverlayRef",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAttaches the portal to the dialog reference and returns the dialog reference.\n",
                    "description": "<p>Attaches the portal to the dialog reference and returns the dialog reference.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4179,
                                "end": 4190,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "decorateRef"
                            },
                            "type": "DecorateOverlayRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4152,
                                "end": 4157,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The dialog reference.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 4158,
                                "end": 4178,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 4159,
                                    "end": 4177,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 4159,
                                        "end": 4177,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "DecorateOverlayRef"
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 4250,
                                "end": 4256,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "portal"
                            },
                            "type": "ComponentPortal<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4221,
                                "end": 4226,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The portal to be attached.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 4227,
                                "end": 4249,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 4228,
                                    "end": 4248,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 4228,
                                        "end": 4243,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "ComponentPortal"
                                    },
                                    "typeArguments": [
                                        {
                                            "pos": 4244,
                                            "end": 4247,
                                            "kind": 133,
                                            "id": 0,
                                            "flags": 16777216,
                                            "transformFlags": 1
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 4292,
                                "end": 4299,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>The dialog reference with the attached portal.</li>\n</ul>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "createDialog",
                    "args": [
                        {
                            "name": "dialogConfig",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "component",
                            "type": "ComponentType<C>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "providers",
                            "type": "ProviderTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "DecorateOverlayRef",
                    "typeParameters": [
                        "T",
                        "C"
                    ],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates and opens a dialog with the specified configuration and component.\n\n\n\n",
                    "description": "<p>Creates and opens a dialog with the specified configuration and component.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3138,
                                "end": 3150,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "dialogConfig"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3128,
                                "end": 3133,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The configuration object for the dialog, including overlay settings.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3134,
                                "end": 3137,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 3135,
                                    "end": 3136,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 3135,
                                        "end": 3136,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "T"
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 3253,
                                "end": 3262,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "component"
                            },
                            "type": "ComponentType<C>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3228,
                                "end": 3233,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The component to be rendered inside the dialog.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3234,
                                "end": 3252,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 3235,
                                    "end": 3251,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 3235,
                                        "end": 3248,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "ComponentType"
                                    },
                                    "typeArguments": [
                                        {
                                            "pos": 3249,
                                            "end": 3250,
                                            "kind": 183,
                                            "id": 0,
                                            "flags": 16777216,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 1,
                                            "typeName": {
                                                "pos": 3249,
                                                "end": 3250,
                                                "kind": 80,
                                                "id": 0,
                                                "flags": 16777216,
                                                "transformFlags": 0,
                                                "escapedText": "C"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 3342,
                                "end": 3351,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "providers"
                            },
                            "type": "ProviderTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "pos": 3319,
                                "end": 3324,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Optional array of providers to be injected into the dialog.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 3325,
                                "end": 3340,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 3326,
                                    "end": 3339,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 3326,
                                        "end": 3339,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "ProviderTypes"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 3429,
                                "end": 3436,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>A reference to the created dialog overlay.</li>\n</ul>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "openComponentDialog",
                    "args": [
                        {
                            "name": "config",
                            "type": "DialogComponentConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "providers",
                            "type": "ProviderTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "DecorateOverlayRef",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens a component dialog with the specified configuration and providers.\n\n",
                    "description": "<p>Opens a component dialog with the specified configuration and providers.</p>\n",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2325,
                                "end": 2331,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "config"
                            },
                            "type": "DialogComponentConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2295,
                                "end": 2300,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The configuration object for the component dialog.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2301,
                                "end": 2324,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 2302,
                                    "end": 2323,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 2302,
                                        "end": 2323,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "DialogComponentConfig"
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 2414,
                                "end": 2423,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "providers"
                            },
                            "type": "ProviderTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "pos": 2391,
                                "end": 2396,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Optional array of providers to be injected into the dialog.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2397,
                                "end": 2412,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 2398,
                                    "end": 2411,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 2398,
                                        "end": 2411,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "ProviderTypes"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2496,
                                "end": 2503,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>A reference to the created dialog overlay.</li>\n</ul>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "openDefaultDialog",
                    "args": [
                        {
                            "name": "config",
                            "type": "DefaultDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DecorateOverlayRef",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens a default dialog with the specified configuration.\n\n",
                    "description": "<p>Opens a default dialog with the specified configuration.</p>\n",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1806,
                                "end": 1812,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "config"
                            },
                            "type": "DefaultDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1778,
                                "end": 1783,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The configuration object for the default dialog.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1784,
                                "end": 1805,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 1785,
                                    "end": 1804,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 1785,
                                        "end": 1804,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "DefaultDialogConfig"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1870,
                                "end": 1877,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>A reference to the created dialog overlay.</li>\n</ul>\n",
                            "returnType": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Service to manage and open dialog overlays in the application.</p>\n<p>The <code>DialogService</code> provides methods to open default dialogs and component-based dialogs\nwith specified configurations and providers. It utilizes an internal reference builder\nand injector to create and manage dialog overlays.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">// Injecting DialogService in a component\nconstructor(private dialogService: DialogService) {}</code></pre></div><p>// Opening a default dialog\nconst config: DefaultDialogConfig = { /* configuration options */ };\nconst dialogRef = this.dialogService.openDefaultDialog(config);</p>\n<p>// Opening a component-based dialog\nconst componentConfig: DialogComponentConfig = { /* configuration options */ };\nconst dialogRef = this.dialogService.openComponentDialog(componentConfig);</p>\n",
            "rawdescription": "\n\nService to manage and open dialog overlays in the application.\n\nThe `DialogService` provides methods to open default dialogs and component-based dialogs\nwith specified configurations and providers. It utilizes an internal reference builder\nand injector to create and manage dialog overlays.\n\n```html\n// Injecting DialogService in a component\nconstructor(private dialogService: DialogService) {}\n```\n// Opening a default dialog\nconst config: DefaultDialogConfig = { /* configuration options *\\/ };\nconst dialogRef = this.dialogService.openDefaultDialog(config);\n\n// Opening a component-based dialog\nconst componentConfig: DialogComponentConfig = { /* configuration options *\\/ };\nconst dialogRef = this.dialogService.openComponentDialog(componentConfig);\n\n",
            "sourceCode": "import { inject, Injectable, Injector } from '@angular/core';\nimport { DialogComponentConfig, DefaultDialogConfig, DialogType } from '../models';\nimport { Overlay, OverlayPositionBuilder } from '@angular/cdk/overlay';\nimport { DecorateRefBuilder, createRefBuilder, createRefInjector } from '../utils';\nimport { DecorateOverlayRef } from '../decorate-overlay-ref';\nimport { ComponentPortal, ComponentType } from '@angular/cdk/portal';\nimport { WebFeaturesDialogComponent } from '../web-features-dialog/web-features-dialog.component';\nimport { DIALOG_DEFAULT_PROVIDER, ProviderTypes, DIALOG_COMPONENT_PROVIDER } from '../providers';\n\n/**\n * Service to manage and open dialog overlays in the application.\n *\n * The `DialogService` provides methods to open default dialogs and component-based dialogs\n * with specified configurations and providers. It utilizes an internal reference builder\n * and injector to create and manage dialog overlays.\n *\n * @example\n * // Injecting DialogService in a component\n * constructor(private dialogService: DialogService) {}\n *\n * // Opening a default dialog\n * const config: DefaultDialogConfig = { /* configuration options *\\/ };\n * const dialogRef = this.dialogService.openDefaultDialog(config);\n *\n * // Opening a component-based dialog\n * const componentConfig: DialogComponentConfig = { /* configuration options *\\/ };\n * const dialogRef = this.dialogService.openComponentDialog(componentConfig);\n *\n * @publicApi\n */\n@Injectable({ providedIn: 'root' })\nexport class DialogService {\n  #refBuilder: DecorateRefBuilder = createRefBuilder(inject(OverlayPositionBuilder), inject(Overlay));\n  #refInjector = createRefInjector(inject(Injector));\n  constructor() { }\n\n  /**\n   * Opens a default dialog with the specified configuration.\n   *\n   * @param {DefaultDialogConfig} config - The configuration object for the default dialog.\n   * @returns {DecorateOverlayRef} - A reference to the created dialog overlay.\n   */\n  public openDefaultDialog(config: DefaultDialogConfig): DecorateOverlayRef {\n    const dialogProvider = { provide: DIALOG_DEFAULT_PROVIDER, useValue: config };\n    return this.createDialog(config, WebFeaturesDialogComponent, [dialogProvider]);\n  }\n\n  /**\n   * Opens a component dialog with the specified configuration and providers.\n   *\n   * @param {DialogComponentConfig} config - The configuration object for the component dialog.\n   * @param {ProviderTypes} [providers=[]] - Optional array of providers to be injected into the dialog.\n   * @returns {DecorateOverlayRef} - A reference to the created dialog overlay.\n   */\n  public openComponentDialog(config: DialogComponentConfig, providers: ProviderTypes = []): DecorateOverlayRef {\n    const dialogComponentProvider = { provide: DIALOG_COMPONENT_PROVIDER, useValue: config };\n    return this.createDialog(config, config.componentRef(), [...providers, dialogComponentProvider]);\n  }\n\n  /**\n   * Creates and opens a dialog with the specified configuration and component.\n   *\n   * @template T - The type of the dialog configuration.\n   * @template C - The type of the component to be rendered inside the dialog.\n   *\n   * @param {T} dialogConfig - The configuration object for the dialog, including overlay settings.\n   * @param {ComponentType<C>} component - The component to be rendered inside the dialog.\n   * @param {ProviderTypes} [providers=[]] - Optional array of providers to be injected into the dialog.\n   *\n   * @returns {DecorateOverlayRef} - A reference to the created dialog overlay.\n   */\n  private createDialog<T extends DialogType, C>(\n    dialogConfig: T, component: ComponentType<C>, providers: ProviderTypes = []\n  ): DecorateOverlayRef {\n    // Sets up the dialog reference, injector, and portal.\n    const { overlayConfig, autoClose, injectorID } = dialogConfig;\n    const decorateRef = this.#refBuilder(overlayConfig, autoClose);\n    const injector = this.#refInjector(injectorID, decorateRef, providers);\n    const portal = new ComponentPortal(component, null, injector);\n    return this.attachDialog(decorateRef, portal);\n  }\n\n  /**\n   * Attaches the portal to the dialog reference and returns the dialog reference.\n   * @param {DecorateOverlayRef} decorateRef - The dialog reference.\n   * @param {ComponentPortal<any>} portal - The portal to be attached.\n   * @returns {DecorateOverlayRef} - The dialog reference with the attached portal.\n   */\n  private attachDialog(decorateRef: DecorateOverlayRef, portal: ComponentPortal<any>): DecorateOverlayRef {\n    decorateRef.attachPortal(portal);\n    return decorateRef;\n  }\n}\n\n\n//  contentFactory: (contentContainerRef: ViewContainerRef) => void;\n// <ng-container *sharedContentContainer=\"widget.contentFactory\"></ng-container>\n// protected override createContentFactory(): (contentContainerRef: ViewContainerRef) => void {\n//   return (contentContainerRef: ViewContainerRef) => {\n//     contentContainerRef.createComponent(ZStackSlideWidgetComponent);\n//   };\n// }\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 34
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "DecorateOverlayRef",
            "id": "class-DecorateOverlayRef-cc4482c8fd6c9effdf70e918dbcf4b5fd30ca8683f365bce02e2b122834422cea0a966b92fcd9c4f1cdd233edd33fa1f879e1c6c46d612ae3082b6be6fa2cd3e",
            "file": "libs/web/features/dialog/src/lib/decorate-overlay-ref.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { OverlayRef, PositionStrategy } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef } from '@angular/core';\nimport { filter, Observable, Subject, takeUntil, tap } from 'rxjs';\nimport { DialogEvent } from './models';\n\nexport class DecorateOverlayRef {\n  #eventEmitterSubject: Subject<DialogEvent> = new Subject<DialogEvent>();\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  public event$: Observable<DialogEvent> = this.#eventEmitterSubject;\n  #destroySubject: Subject<boolean> = new Subject<boolean>();\n  #componentRef: ComponentRef<any> | undefined;\n\n  constructor(private overlayRef: OverlayRef, private autoClose: boolean) {\n    this.overlayRef.backdropClick().pipe(\n      takeUntil(this.#destroySubject),\n      tap(() => this.sendEvent(DialogEvent.BackdropClick)),\n      filter(() => this.autoClose),\n      tap(() => this.close())\n    )\n      .subscribe();\n\n  }\n\n  public updateInput<T>(input: string, value: T): void {\n    if (this.#componentRef) {\n      this.#componentRef.setInput(input, value);\n    }\n  }\n\n  public attachPortal<T>(portal: ComponentPortal<T>): void {\n    this.#componentRef = this.overlayRef.attach(portal);\n  }\n\n  public updatePosition(strategy: PositionStrategy): void {\n    this.overlayRef.updatePositionStrategy(strategy);\n    this.overlayRef.updatePosition();\n  }\n\n  public sendEvent(event: DialogEvent): void {\n    this.#eventEmitterSubject.next(event);\n    if (this.autoClose) {\n      this.close();\n    }\n  }\n\n  public close(): void {\n    this.overlayRef.dispose();\n    this.#destroySubject.next(true);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "overlayRef",
                        "type": "OverlayRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "autoClose",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "overlayRef",
                        "type": "OverlayRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "autoClose",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "#componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<any> | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#destroySubject",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#eventEmitterSubject",
                    "defaultValue": "new Subject<DialogEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<DialogEvent>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "event$",
                    "defaultValue": "this.#eventEmitterSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<DialogEvent>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "attachPortal",
                    "args": [
                        {
                            "name": "portal",
                            "type": "ComponentPortal<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "portal",
                            "type": "ComponentPortal<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sendEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "DialogEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DialogEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateInput",
                    "args": [
                        {
                            "name": "input",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updatePosition",
                    "args": [
                        {
                            "name": "strategy",
                            "type": "PositionStrategy",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "strategy",
                            "type": "PositionStrategy",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WebEvent",
            "id": "class-WebEvent-764b9db2d26a814c0cee56aba2e651a5ba489b931c6ae386c83849d529be6069267e060cd7c13f9ef3e6813565204dbf451eb1e725f3e58a83cc798ace643fe2",
            "file": "libs/shared/src/lib/events/web-event.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class WebEvent {\n  static Keyboard = {\n    Type: {\n      KeyPress: 'keypress',\n      KeyUp: 'keyup',\n      KeyDown: 'keydown',\n      Input: 'input',\n    },\n    Key: {\n      Enter: 'Enter',\n      WhiteSpace: ' ',\n      Tab: 'Tab',\n    },\n  };\n\n  static Mouse = {\n    Type: {\n      Click: 'click',\n      DblClick: 'dblclick',\n      MouseDown: 'mousedown',\n      MouseMove: 'mousemove',\n      MouseOut: 'mouseout',\n      MouseOver: 'mouseOver',\n      MouseUp: 'mouseup',\n    },\n  };\n\n  static Focus = {\n    Type: {\n      Focus: 'focus',\n      Blur: 'blur',\n      FocusOut: 'focusout',\n    },\n  };\n\n  static Scroll = {\n    Type: {\n      Scroll: 'scroll',\n    },\n  };\n}\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "Focus",
                    "defaultValue": "{\n    Type: {\n      Focus: 'focus',\n      Blur: 'blur',\n      FocusOut: 'focusout',\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "Keyboard",
                    "defaultValue": "{\n    Type: {\n      KeyPress: 'keypress',\n      KeyUp: 'keyup',\n      KeyDown: 'keydown',\n      Input: 'input',\n    },\n    Key: {\n      Enter: 'Enter',\n      WhiteSpace: ' ',\n      Tab: 'Tab',\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "Mouse",
                    "defaultValue": "{\n    Type: {\n      Click: 'click',\n      DblClick: 'dblclick',\n      MouseDown: 'mousedown',\n      MouseMove: 'mousemove',\n      MouseOut: 'mouseout',\n      MouseOver: 'mouseOver',\n      MouseUp: 'mouseup',\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "Scroll",
                    "defaultValue": "{\n    Type: {\n      Scroll: 'scroll',\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        126
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ClickDebounceDirective",
            "id": "directive-ClickDebounceDirective-dce1331d6ea683cde6d3e4c1467a780d2a5572386f29a04078dc7bd129709c2180980a77a0f93d1223fbc345542df46bcf09774c542e04fbf9fb5f0efd2b6f2f",
            "file": "libs/shared/src/lib/directives/click-debounce.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { debounceTime, fromEvent } from 'rxjs';\nimport { SubSink } from 'subsink';\nimport { WebEvent } from '../events';\n\n@Directive({\n  standalone: true,\n  selector: '[sharedClickDebounce]',\n})\nexport class ClickDebounceDirective implements OnDestroy {\n  // TODO: 改成新的\n  @Output() monorepoClickDebounce = new EventEmitter();\n  private subSink = new SubSink();\n\n  constructor(elemRef: ElementRef) {\n    // 這個是傳入pointEvent, 如果要MouseEvent做其他對應動作，就專注使用HostListener\n    this.subSink.sink = fromEvent(elemRef.nativeElement, WebEvent.Mouse.Type.Click)\n      .pipe(debounceTime(300))\n      .subscribe((x) => this.monorepoClickDebounce.emit(x));\n  }\n\n  ngOnDestroy() {\n    this.subSink.unsubscribe();\n  }\n}\n",
            "selector": "[sharedClickDebounce]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "monorepoClickDebounce",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "subSink",
                    "defaultValue": "new SubSink()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elemRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "elemRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ClickDebounceStopPropagationDirective",
            "id": "directive-ClickDebounceStopPropagationDirective-4b7b0306a4962e9ab670cb7ff27e75fb4133a147a04bce699e173ba75aa9fe9f3265f88b8d2934100dd075e078c0c3f2d318b575a3ed85c47aa5c37ada7ae6f3",
            "file": "libs/shared/src/lib/directives/click-debounce-stop-propagation.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, OnDestroy, Output } from '@angular/core';\nimport { debounceTime, Subject } from 'rxjs';\nimport { SubSink } from 'subsink';\n\n@Directive({\n  standalone: true,\n  selector: '[sharedClickDebounceStopPropagation]',\n})\nexport class ClickDebounceStopPropagationDirective implements OnDestroy {\n  // TODO: 改成新的\n  @Output() clickDebounceStopPropagation = new EventEmitter();\n  private subSink = new SubSink();\n  private click$ = new Subject<unknown>();\n\n  constructor() {\n    this.subSink.sink = this.click$\n      .pipe(debounceTime(300))\n      .subscribe((x) => this.clickDebounceStopPropagation.emit(x));\n  }\n\n  @HostListener('click', ['$event'])\n  clickEvent(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.click$.next(event);\n  }\n\n  ngOnDestroy() {\n    this.subSink.unsubscribe();\n  }\n}\n",
            "selector": "[sharedClickDebounceStopPropagation]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "clickDebounceStopPropagation",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22
                }
            ],
            "propertiesClass": [
                {
                    "name": "click$",
                    "defaultValue": "new Subject<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subSink",
                    "defaultValue": "new SubSink()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            }
        },
        {
            "name": "ContentContainerDirective",
            "id": "directive-ContentContainerDirective-5a5a9676e7868c3a79b5b7c77971eb6abd7c07b687d1fab6753e6534fa911c3db62e36434fd88646f6da9e664b6a0da2328834915225f28c74d1ec4f6641c58a",
            "file": "libs/shared/src/lib/directives/content-container.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[sharedContentContainer]',\n})\nexport class ContentContainerDirective {\n  constructor(private viewContainerRef: ViewContainerRef) { }\n\n  // TODO: 改成新的\n  @Input() set sharedContentContainer(\n    contentFactory: (viewContainerRef: ViewContainerRef) => void\n  ) {\n    contentFactory(this.viewContainerRef);\n  }\n}\n",
            "selector": "[sharedContentContainer]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "sharedContentContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "void",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "sharedContentContainer": {
                    "name": "sharedContentContainer",
                    "setSignature": {
                        "name": "sharedContentContainer",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "contentFactory",
                                "type": "function",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "function": [
                                    {
                                        "name": "viewContainerRef",
                                        "type": "ViewContainerRef",
                                        "deprecated": false,
                                        "deprecationMessage": ""
                                    }
                                ]
                            }
                        ],
                        "returnType": "void",
                        "line": 11,
                        "jsdoctags": [
                            {
                                "name": "contentFactory",
                                "type": "function",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "function": [
                                    {
                                        "name": "viewContainerRef",
                                        "type": "ViewContainerRef",
                                        "deprecated": false,
                                        "deprecationMessage": ""
                                    }
                                ],
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "TooltipDirective",
            "id": "directive-TooltipDirective-5c6cbb5fc07d49c37d342fbe62a36f611bff03d862d8eed45d05f129b5eca676e03184925ffbc842a7d67d2c78cd3a32243da8e4208c5652e9b7d2c28b93dedb",
            "file": "libs/shared/src/lib/directives/tool-tip.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener, Renderer2, input } from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[sharedTooltip]',\n})\nexport class TooltipDirective {\n  tooltipText = input<string>();\n  tooltipElement: HTMLElement | null = null;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    const text = this.tooltipText();\n    if (!text) {\n      return;\n    }\n\n    // Create tooltip element\n    this.tooltipElement = this.renderer.createElement('span');\n    this.renderer.appendChild(\n      this.tooltipElement,\n      this.renderer.createText(text)\n    );\n\n    // Add classes for styling\n    this.renderer.addClass(this.tooltipElement, 'absolute');\n    this.renderer.addClass(this.tooltipElement, 'bg-gray-800');\n    this.renderer.addClass(this.tooltipElement, 'text-white');\n    this.renderer.addClass(this.tooltipElement, 'text-sm');\n    this.renderer.addClass(this.tooltipElement, 'rounded-md');\n    this.renderer.addClass(this.tooltipElement, 'px-2');\n    this.renderer.addClass(this.tooltipElement, 'py-1');\n    this.renderer.addClass(this.tooltipElement, 'z-50');\n    this.renderer.addClass(this.tooltipElement, 'whitespace-nowrap');\n    this.renderer.addClass(this.tooltipElement, 'shadow-lg');\n\n    // Position the tooltip\n    const hostPos = this.el.nativeElement.getBoundingClientRect();\n    this.renderer.setStyle(this.tooltipElement, 'top', `${hostPos.top - 0}px`);\n    this.renderer.setStyle(this.tooltipElement, 'left', `${hostPos.left}px`);\n\n    // Add the tooltip element to the DOM\n    const parent = this.el.nativeElement.parentElement;\n    this.renderer.appendChild(parent, this.tooltipElement);\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.tooltipElement) {\n      this.renderer.removeChild(\n        this.el.nativeElement.parentElement,\n        this.tooltipElement\n      );\n      this.tooltipElement = null;\n    }\n  }\n}\n",
            "selector": "[sharedTooltip]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tooltipText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "required": false
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48
                }
            ],
            "propertiesClass": [
                {
                    "name": "tooltipElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "tooltipText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-61d4c77f1f20c1de13608796103d6fb10ef599f14aacf1f73028e62012ed4e4ffdac8ca36441f34ee6e0b72d82358ab3ceb6a944e620a4547f20f5766cd16817",
            "file": "apps/skeleton/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "showDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DialogService, MOCK_CONFIG } from 'web/features/dialog';\n\n@Component({\n  standalone: true,\n  imports: [RouterModule],\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n\n  constructor() { this.showDialog(); }\n\n  public showDialog() {\n    const service = inject(DialogService);\n    const ref = service.openDefaultDialog(MOCK_CONFIG);\n    const subscription = ref.event$.subscribe((event) => {\n      console.log(event);\n      // ref.close();\n      subscription.unsubscribe();\n    });\n    // service.openComponentDialog(MOCK_CONFIG2);\n  }\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": [],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-94a7fef32f368cea97bb296e4b52b602664a0fd17a8a15e70beebd1517d61b217364929d1a4dbc4019f12e457eb569a2afb45ce51004be4765575c04012189c6-1",
            "file": "apps/todolist/src/app/app.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "TodolistComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TodolistComponent } from 'lib-todolist';\n\n@Component({\n  standalone: true,\n  imports: [RouterModule, TodolistComponent],\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AppComponent-1",
            "templateData": "<todolist></todolist>\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-87aa641e52cbfc10e0ba384fcfc0b340cf0c1cff29341d85d6ead892009383b5f55f439023287636a5b3a77bb3c7ce799dba6c8eb65d7d6f8d92f90802302251",
            "file": "libs/web/uis/src/lib/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "uis-checkbox",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex items-center\">  <!-- Hidden Checkbox -->\n  <input\n    type=\"checkbox\"\n    class=\"peer hidden\"\n    [id]=\"uniqId()\"\n    [checked]=\"checked()\"\n    (change)=\"checkedChangeHandler()\"\n  />\n\n  <!-- Label -->\n  <label [for]=\"uniqId()\" [ngClass]=\"[defaultClasses]\" [class.bg-black]=\"checked()\">\n    <!-- Arrow Icon -->\n    <svg\n      *ngIf=\"checked()\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"h-4 w-4\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M16.707 5.293a1 1 0 00-1.414 0L8 12.586l-3.293-3.293a1 1 0 00-1.414 1.414l4 4a1 1 0 001.414 0l8-8a1 1 0 000-1.414z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n  </label>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                },
                {
                    "name": "uniqId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "checkedChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                },
                {
                    "name": "checkedChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "required": false
                },
                {
                    "name": "uniqId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "checkedChangeHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, model, output, input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DEFAULT_CHECKBOX_CLASSES } from '../styles';\n\n// type color = 'default' | 'red' | 'yellow' | 'green' | 'blue';\n\n@Component({\n  selector: 'uis-checkbox',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `<div class=\"flex items-center\">\n  <!-- Hidden Checkbox -->\n  <input\n    type=\"checkbox\"\n    class=\"peer hidden\"\n    [id]=\"uniqId()\"\n    [checked]=\"checked()\"\n    (change)=\"checkedChangeHandler()\"\n  />\n\n  <!-- Label -->\n  <label [for]=\"uniqId()\" [ngClass]=\"[defaultClasses]\" [class.bg-black]=\"checked()\">\n    <!-- Arrow Icon -->\n    <svg\n      *ngIf=\"checked()\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"h-4 w-4\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M16.707 5.293a1 1 0 00-1.414 0L8 12.586l-3.293-3.293a1 1 0 00-1.414 1.414l4 4a1 1 0 001.414 0l8-8a1 1 0 000-1.414z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n  </label>\n</div>\n`,\n})\nexport class CheckboxComponent {\n  checkedChange = output<boolean>();\n  checked = model<boolean>(false);\n  uniqId = input.required<string>()\n\n  protected get defaultClasses() {\n    return DEFAULT_CHECKBOX_CLASSES;\n  }\n\n  protected checkedChangeHandler() {\n    this.checked.set(!this.checked());\n    this.checkedChange.emit(this.checked());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "defaultClasses": {
                    "name": "defaultClasses",
                    "getSignature": {
                        "name": "defaultClasses",
                        "type": "",
                        "returnType": "",
                        "line": 47
                    }
                }
            }
        },
        {
            "name": "CoreButtonComponent",
            "id": "component-CoreButtonComponent-93790fefdb7ed5a05b4cdcb0f1c1c2c3bc1a85d360a28b67b4225f56c417808adcf02419d3563bad7bd2d08ef6caf90fc4efa18ac27103023ac1323411c95a22",
            "file": "libs/core-ui-kit/src/buttons/core-button/core-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "core-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button [ngClass]=\"variant\">{{ label }}</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'core-button',\n  template: `<button [ngClass]=\"variant\">{{ label }}</button>`,\n  styles: []\n})\nexport class CoreButtonComponent {\n  @Input() label = 'Button';\n  @Input() variant = 'primary';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "NxWelcomeComponent",
            "id": "component-NxWelcomeComponent-8a7ed21fa722044d784cb00f70dc968bfb8d53eaee857887ce2b90ac1406fb6f42374e81d8e8b850f63781b32225807b1d16160be5d22d8884168ad41883bbbf",
            "file": "apps/skeleton/src/app/nx-welcome.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nx-welcome",
            "styleUrls": [],
            "styles": [],
            "template": "    <!--\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     This is a starter component and can be deleted.\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     Delete this file and get started with your project!\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     -->\n    <style>\n      html {\n        -webkit-text-size-adjust: 100%;\n        font-family:\n          ui-sans-serif,\n          system-ui,\n          -apple-system,\n          BlinkMacSystemFont,\n          'Segoe UI',\n          Roboto,\n          'Helvetica Neue',\n          Arial,\n          'Noto Sans',\n          sans-serif,\n          'Apple Color Emoji',\n          'Segoe UI Emoji',\n          'Segoe UI Symbol',\n          'Noto Color Emoji';\n        line-height: 1.5;\n        tab-size: 4;\n        scroll-behavior: smooth;\n      }\n      body {\n        font-family: inherit;\n        line-height: inherit;\n        margin: 0;\n      }\n      h1,\n      h2,\n      p,\n      pre {\n        margin: 0;\n      }\n      *,\n      ::before,\n      ::after {\n        box-sizing: border-box;\n        border-width: 0;\n        border-style: solid;\n        border-color: currentColor;\n      }\n      h1,\n      h2 {\n        font-size: inherit;\n        font-weight: inherit;\n      }\n      a {\n        color: inherit;\n        text-decoration: inherit;\n      }\n      pre {\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',\n          'Courier New', monospace;\n      }\n      svg {\n        display: block;\n        vertical-align: middle;\n      }\n      svg {\n        shape-rendering: auto;\n        text-rendering: optimizeLegibility;\n      }\n      pre {\n        background-color: rgba(55, 65, 81, 1);\n        border-radius: 0.25rem;\n        color: rgba(229, 231, 235, 1);\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',\n          'Courier New', monospace;\n        overflow: auto;\n        padding: 0.5rem 0.75rem;\n      }\n      .shadow {\n        box-shadow:\n          0 0 #0000,\n          0 0 #0000,\n          0 10px 15px -3px rgba(0, 0, 0, 0.1),\n          0 4px 6px -2px rgba(0, 0, 0, 0.05);\n      }\n      .rounded {\n        border-radius: 1.5rem;\n      }\n      .wrapper {\n        width: 100%;\n      }\n      .container {\n        margin-left: auto;\n        margin-right: auto;\n        max-width: 768px;\n        padding-bottom: 3rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n        color: rgba(55, 65, 81, 1);\n        width: 100%;\n      }\n      #welcome {\n        margin-top: 2.5rem;\n      }\n      #welcome h1 {\n        font-size: 3rem;\n        font-weight: 500;\n        letter-spacing: -0.025em;\n        line-height: 1;\n      }\n      #welcome span {\n        display: block;\n        font-size: 1.875rem;\n        font-weight: 300;\n        line-height: 2.25rem;\n        margin-bottom: 0.5rem;\n      }\n      #hero {\n        align-items: center;\n        background-color: hsla(214, 62%, 21%, 1);\n        border: none;\n        box-sizing: border-box;\n        color: rgba(55, 65, 81, 1);\n        display: grid;\n        grid-template-columns: 1fr;\n        margin-top: 3.5rem;\n      }\n      #hero .text-container {\n        color: rgba(255, 255, 255, 1);\n        padding: 3rem 2rem;\n      }\n      #hero .text-container h2 {\n        font-size: 1.5rem;\n        line-height: 2rem;\n        position: relative;\n      }\n      #hero .text-container h2 svg {\n        color: hsla(162, 47%, 50%, 1);\n        height: 2rem;\n        left: -0.25rem;\n        position: absolute;\n        top: 0;\n        width: 2rem;\n      }\n      #hero .text-container h2 span {\n        margin-left: 2.5rem;\n      }\n      #hero .text-container a {\n        background-color: rgba(255, 255, 255, 1);\n        border-radius: 0.75rem;\n        color: rgba(55, 65, 81, 1);\n        display: inline-block;\n        margin-top: 1.5rem;\n        padding: 1rem 2rem;\n        text-decoration: inherit;\n      }\n      #hero .logo-container {\n        display: none;\n        justify-content: center;\n        padding-left: 2rem;\n        padding-right: 2rem;\n      }\n      #hero .logo-container svg {\n        color: rgba(255, 255, 255, 1);\n        width: 66.666667%;\n      }\n      #middle-content {\n        align-items: flex-start;\n        display: grid;\n        grid-template-columns: 1fr;\n        margin-top: 3.5rem;\n      }\n      #middle-content #middle-left-content {\n        display: flex;\n        flex-direction: column;\n        gap: 2rem;\n      }\n      #learning-materials {\n        padding: 2.5rem 2rem;\n      }\n      #learning-materials h2 {\n        font-weight: 500;\n        font-size: 1.25rem;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      .list-item-link {\n        align-items: center;\n        border-radius: 0.75rem;\n        display: flex;\n        margin-top: 1rem;\n        padding: 1rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 100%;\n      }\n      .list-item-link svg:first-child {\n        margin-right: 1rem;\n        height: 1.5rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 1.5rem;\n      }\n      .list-item-link > span {\n        flex-grow: 1;\n        font-weight: 400;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      .list-item-link > span > span {\n        color: rgba(107, 114, 128, 1);\n        display: block;\n        flex-grow: 1;\n        font-size: 0.75rem;\n        font-weight: 300;\n        line-height: 1rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      .list-item-link svg:last-child {\n        height: 1rem;\n        transition-property: all;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 1rem;\n      }\n      .list-item-link:hover {\n        color: rgba(255, 255, 255, 1);\n        background-color: hsla(162, 55%, 33%, 1);\n      }\n\n      .list-item-link:hover > span > span {\n        color: rgba(243, 244, 246, 1);\n      }\n      .list-item-link:hover svg:last-child {\n        transform: translateX(0.25rem);\n      }\n\n      .button-pill {\n        padding: 1.5rem 2rem;\n        margin-bottom: 2rem;\n        transition-duration: 300ms;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        align-items: center;\n        display: flex;\n      }\n      .button-pill svg {\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        flex-shrink: 0;\n        width: 3rem;\n      }\n      .button-pill > span {\n        letter-spacing: -0.025em;\n        font-weight: 400;\n        font-size: 1.125rem;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      .button-pill span span {\n        display: block;\n        font-size: 0.875rem;\n        font-weight: 300;\n        line-height: 1.25rem;\n      }\n      .button-pill:hover svg,\n      .button-pill:hover {\n        color: rgba(255, 255, 255, 1) !important;\n      }\n      .nx-console:hover {\n        background-color: rgba(0, 122, 204, 1);\n      }\n      .nx-console svg {\n        color: rgba(0, 122, 204, 1);\n      }\n      .nx-console-jetbrains {\n        margin-top: 2rem;\n      }\n      .nx-console-jetbrains:hover {\n        background-color: rgba(255, 49, 140, 1);\n      }\n      .nx-console-jetbrains svg {\n        color: rgba(255, 49, 140, 1);\n      }\n      #nx-repo:hover {\n        background-color: rgba(24, 23, 23, 1);\n      }\n      #nx-repo svg {\n        color: rgba(24, 23, 23, 1);\n      }\n      #nx-cloud {\n        margin-bottom: 2rem;\n        margin-top: 2rem;\n        padding: 2.5rem 2rem;\n      }\n      #nx-cloud > div {\n        align-items: center;\n        display: flex;\n      }\n      #nx-cloud > div svg {\n        border-radius: 0.375rem;\n        flex-shrink: 0;\n        width: 3rem;\n      }\n      #nx-cloud > div h2 {\n        font-size: 1.125rem;\n        font-weight: 400;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      #nx-cloud > div h2 span {\n        display: block;\n        font-size: 0.875rem;\n        font-weight: 300;\n        line-height: 1.25rem;\n      }\n      #nx-cloud p {\n        font-size: 1rem;\n        line-height: 1.5rem;\n        margin-top: 1rem;\n      }\n      #nx-cloud pre {\n        margin-top: 1rem;\n      }\n      #nx-cloud a {\n        color: rgba(107, 114, 128, 1);\n        display: block;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        margin-top: 1.5rem;\n        text-align: right;\n      }\n      #nx-cloud a:hover {\n        text-decoration: underline;\n      }\n      #commands {\n        padding: 2.5rem 2rem;\n        margin-top: 3.5rem;\n      }\n      #commands h2 {\n        font-size: 1.25rem;\n        font-weight: 400;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      #commands p {\n        font-size: 1rem;\n        font-weight: 300;\n        line-height: 1.5rem;\n        margin-top: 1rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      details {\n        align-items: center;\n        display: flex;\n        margin-top: 1rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n        width: 100%;\n      }\n      details pre > span {\n        color: rgba(181, 181, 181, 1);\n      }\n      summary {\n        border-radius: 0.5rem;\n        display: flex;\n        font-weight: 400;\n        padding: 0.5rem;\n        cursor: pointer;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n      }\n      summary:hover {\n        background-color: rgba(243, 244, 246, 1);\n      }\n      summary svg {\n        height: 1.5rem;\n        margin-right: 1rem;\n        width: 1.5rem;\n      }\n      #love {\n        color: rgba(107, 114, 128, 1);\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        margin-top: 3.5rem;\n        opacity: 0.6;\n        text-align: center;\n      }\n      #love svg {\n        color: rgba(252, 165, 165, 1);\n        width: 1.25rem;\n        height: 1.25rem;\n        display: inline;\n        margin-top: -0.25rem;\n      }\n      @media screen and (min-width: 768px) {\n        #hero {\n          grid-template-columns: repeat(2, minmax(0, 1fr));\n        }\n        #hero .logo-container {\n          display: flex;\n        }\n        #middle-content {\n          grid-template-columns: repeat(2, minmax(0, 1fr));\n          gap: 4rem;\n        }\n      }\n    </style>\n    <div class=\"wrapper\">\n      <div class=\"container\">\n        <!--  WELCOME  -->\n        <div id=\"welcome\">\n          <h1>\n            <span> Hello there, </span>\n            Welcome skeleton 👋\n          </h1>\n        </div>\n        <!--  HERO  -->\n        <div id=\"hero\" class=\"rounded\">\n          <div class=\"text-container\">\n            <h2>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\"\n                />\n              </svg>\n              <span>You&apos;re up and running</span>\n            </h2>\n            <a href=\"#commands\"> What&apos;s next? </a>\n          </div>\n          <div class=\"logo-container\">\n            <svg\n              fill=\"currentColor\"\n              role=\"img\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M11.987 14.138l-3.132 4.923-5.193-8.427-.012 8.822H0V4.544h3.691l5.247 8.833.005-3.998 3.044 4.759zm.601-5.761c.024-.048 0-3.784.008-3.833h-3.65c.002.059-.005 3.776-.003 3.833h3.645zm5.634 4.134a2.061 2.061 0 0 0-1.969 1.336 1.963 1.963 0 0 1 2.343-.739c.396.161.917.422 1.33.283a2.1 2.1 0 0 0-1.704-.88zm3.39 1.061c-.375-.13-.8-.277-1.109-.681-.06-.08-.116-.17-.176-.265a2.143 2.143 0 0 0-.533-.642c-.294-.216-.68-.322-1.18-.322a2.482 2.482 0 0 0-2.294 1.536 2.325 2.325 0 0 1 4.002.388.75.75 0 0 0 .836.334c.493-.105.46.36 1.203.518v-.133c-.003-.446-.246-.55-.75-.733zm2.024 1.266a.723.723 0 0 0 .347-.638c-.01-2.957-2.41-5.487-5.37-5.487a5.364 5.364 0 0 0-4.487 2.418c-.01-.026-1.522-2.39-1.538-2.418H8.943l3.463 5.423-3.379 5.32h3.54l1.54-2.366 1.568 2.366h3.541l-3.21-5.052a.7.7 0 0 1-.084-.32 2.69 2.69 0 0 1 2.69-2.691h.001c1.488 0 1.736.89 2.057 1.308.634.826 1.9.464 1.9 1.541a.707.707 0 0 0 1.066.596zm.35.133c-.173.372-.56.338-.755.639-.176.271.114.412.114.412s.337.156.538-.311c.104-.231.14-.488.103-.74z\"\n              />\n            </svg>\n          </div>\n        </div>\n        <!--  MIDDLE CONTENT  -->\n        <div id=\"middle-content\">\n          <div id=\"middle-left-content\">\n            <div id=\"learning-materials\" class=\"rounded shadow\">\n              <h2>Learning materials</h2>\n              <a\n                href=\"https://nx.dev/getting-started/intro?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n                  />\n                </svg>\n                <span>\n                  Documentation\n                  <span> Everything is in there </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://nx.dev/blog?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\"\n                  />\n                </svg>\n                <span>\n                  Blog\n                  <span> Changelog, features & events </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://www.youtube.com/@NxDevtools/videos?utm_source=nx-project&sub_confirmation=1\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  role=\"img\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <title>YouTube</title>\n                  <path\n                    d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"\n                  />\n                </svg>\n                <span>\n                  YouTube channel\n                  <span> Nx Show, talks & tutorials </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://nx.dev/getting-started/tutorials/angular-standalone-tutorial?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\"\n                  />\n                </svg>\n                <span>\n                  Interactive tutorials\n                  <span> Create an app, step-by-step </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n            </div>\n            <a\n              id=\"nx-repo\"\n              class=\"button-pill rounded shadow\"\n              href=\"https://github.com/nrwl/nx?utm_source=nx-project\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                fill=\"currentColor\"\n                role=\"img\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                />\n              </svg>\n              <span>\n                Nx is open source\n                <span> Love Nx? Give us a star! </span>\n              </span>\n            </a>\n          </div>\n          <div id=\"other-links\">\n            <a\n              class=\"button-pill nx-console rounded shadow\"\n              href=\"https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console&utm_source=nx-project\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                fill=\"currentColor\"\n                role=\"img\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <title>Visual Studio Code</title>\n                <path\n                  d=\"M23.15 2.587L18.21.21a1.494 1.494 0 0 0-1.705.29l-9.46 8.63-4.12-3.128a.999.999 0 0 0-1.276.057L.327 7.261A1 1 0 0 0 .326 8.74L3.899 12 .326 15.26a1 1 0 0 0 .001 1.479L1.65 17.94a.999.999 0 0 0 1.276.057l4.12-3.128 9.46 8.63a1.492 1.492 0 0 0 1.704.29l4.942-2.377A1.5 1.5 0 0 0 24 20.06V3.939a1.5 1.5 0 0 0-.85-1.352zm-5.146 14.861L10.826 12l7.178-5.448v10.896z\"\n                />\n              </svg>\n              <span>\n                Install Nx Console for VSCode\n                <span>The official VSCode extension for Nx.</span>\n              </span>\n            </a>\n            <a\n              class=\"button-pill nx-console-jetbrains rounded shadow\"\n              href=\"https://plugins.jetbrains.com/plugin/21060-nx-console\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg height=\"48\" width=\"48\" viewBox=\"20 20 60 60\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"m22.5 22.5h60v60h-60z\" />\n                <g fill=\"#fff\">\n                  <path d=\"m29.03 71.25h22.5v3.75h-22.5z\" />\n                  <path\n                    d=\"m28.09 38 1.67-1.58a1.88 1.88 0 0 0 1.47.87c.64 0 1.06-.44 1.06-1.31v-5.98h2.58v6a3.48 3.48 0 0 1 -.87 2.6 3.56 3.56 0 0 1 -2.57.95 3.84 3.84 0 0 1 -3.34-1.55z\"\n                  />\n                  <path d=\"m36 30h7.53v2.19h-5v1.44h4.49v2h-4.42v1.49h5v2.21h-7.6z\" />\n                  <path d=\"m47.23 32.29h-2.8v-2.29h8.21v2.27h-2.81v7.1h-2.6z\" />\n                  <path\n                    d=\"m29.13 43.08h4.42a3.53 3.53 0 0 1 2.55.83 2.09 2.09 0 0 1 .6 1.53 2.16 2.16 0 0 1 -1.44 2.09 2.27 2.27 0 0 1 1.86 2.29c0 1.61-1.31 2.59-3.55 2.59h-4.44zm5 2.89c0-.52-.42-.8-1.18-.8h-1.29v1.64h1.24c.79 0 1.25-.26 1.25-.81zm-.9 2.66h-1.57v1.73h1.62c.8 0 1.24-.31 1.24-.86 0-.5-.4-.87-1.27-.87z\"\n                  />\n                  <path\n                    d=\"m38 43.08h4.1a4.19 4.19 0 0 1 3 1 2.93 2.93 0 0 1 .9 2.19 3 3 0 0 1 -1.93 2.89l2.24 3.27h-3l-1.88-2.84h-.87v2.84h-2.56zm4 4.5c.87 0 1.39-.43 1.39-1.11 0-.75-.54-1.12-1.4-1.12h-1.44v2.26z\"\n                  />\n                  <path\n                    d=\"m49.59 43h2.5l4 9.44h-2.79l-.67-1.69h-3.63l-.67 1.69h-2.71zm2.27 5.73-1-2.65-1.06 2.65z\"\n                  />\n                  <path d=\"m56.46 43.05h2.6v9.37h-2.6z\" />\n                  <path d=\"m60.06 43.05h2.42l3.37 5v-5h2.57v9.37h-2.26l-3.53-5.14v5.14h-2.57z\" />\n                  <path\n                    d=\"m68.86 51 1.45-1.73a4.84 4.84 0 0 0 3 1.13c.71 0 1.08-.24 1.08-.65 0-.4-.31-.6-1.59-.91-2-.46-3.53-1-3.53-2.93 0-1.74 1.37-3 3.62-3a5.89 5.89 0 0 1 3.86 1.25l-1.26 1.84a4.63 4.63 0 0 0 -2.62-.92c-.63 0-.94.25-.94.6 0 .42.32.61 1.63.91 2.14.46 3.44 1.16 3.44 2.91 0 1.91-1.51 3-3.79 3a6.58 6.58 0 0 1 -4.35-1.5z\"\n                  />\n                </g>\n              </svg>\n              <span>\n                Install Nx Console for JetBrains\n                <span>Available for WebStorm, Intellij IDEA Ultimate and more!</span>\n              </span>\n            </a>\n            <div id=\"nx-cloud\" class=\"rounded shadow\">\n              <div>\n                <svg\n                  id=\"nx-cloud-logo\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  stroke=\"currentColor\"\n                  fill=\"transparent\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    stroke-width=\"2\"\n                    d=\"M23 3.75V6.5c-3.036 0-5.5 2.464-5.5 5.5s-2.464 5.5-5.5 5.5-5.5 2.464-5.5 5.5H3.75C2.232 23 1 21.768 1 20.25V3.75C1 2.232 2.232 1 3.75 1h16.5C21.768 1 23 2.232 23 3.75Z\"\n                  />\n                  <path\n                    stroke-width=\"2\"\n                    d=\"M23 6v14.1667C23 21.7307 21.7307 23 20.1667 23H6c0-3.128 2.53867-5.6667 5.6667-5.6667 3.128 0 5.6666-2.5386 5.6666-5.6666C17.3333 8.53867 19.872 6 23 6Z\"\n                  />\n                </svg>\n                <h2>\n                  Nx Cloud\n                  <span> Enable faster CI & better DX </span>\n                </h2>\n              </div>\n              <p>You can activate distributed tasks executions and caching by running:</p>\n              <pre>nx connect</pre>\n              <a\n                href=\"https://nx.dev/nx-cloud?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                What is Nx Cloud?\n              </a>\n            </div>\n          </div>\n        </div>\n        <!--  COMMANDS  -->\n        <div id=\"commands\" class=\"rounded shadow\">\n          <h2>Next steps</h2>\n          <p>Here are some things you can do with Nx:</p>\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              Build, test and lint your app\n            </summary>\n            <pre><span># Build</span>\nnx build\n<span># Test</span>\nnx test\n<span># Lint</span>\nnx lint\n<span># Run them together!</span>\nnx run-many -t build test lint</pre>\n          </details>\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              View project details\n            </summary>\n            <pre>nx show project skeleton</pre>\n          </details>\n\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              View interactive project graph\n            </summary>\n            <pre>nx graph</pre>\n          </details>\n\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              Add UI library\n            </summary>\n            <pre><span># Generate UI lib</span>\nnx g &#64;nx/angular:lib ui\n<span># Add a component</span>\nnx g &#64;nx/angular:component ui/src/lib/button</pre>\n          </details>\n        </div>\n        <p id=\"love\">\n          Carefully crafted with\n          <svg\n            fill=\"currentColor\"\n            stroke=\"none\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n            />\n          </svg>\n        </p>\n      </div>\n    </div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-nx-welcome',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <!--\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     This is a starter component and can be deleted.\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     Delete this file and get started with your project!\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     -->\n    <style>\n      html {\n        -webkit-text-size-adjust: 100%;\n        font-family:\n          ui-sans-serif,\n          system-ui,\n          -apple-system,\n          BlinkMacSystemFont,\n          'Segoe UI',\n          Roboto,\n          'Helvetica Neue',\n          Arial,\n          'Noto Sans',\n          sans-serif,\n          'Apple Color Emoji',\n          'Segoe UI Emoji',\n          'Segoe UI Symbol',\n          'Noto Color Emoji';\n        line-height: 1.5;\n        tab-size: 4;\n        scroll-behavior: smooth;\n      }\n      body {\n        font-family: inherit;\n        line-height: inherit;\n        margin: 0;\n      }\n      h1,\n      h2,\n      p,\n      pre {\n        margin: 0;\n      }\n      *,\n      ::before,\n      ::after {\n        box-sizing: border-box;\n        border-width: 0;\n        border-style: solid;\n        border-color: currentColor;\n      }\n      h1,\n      h2 {\n        font-size: inherit;\n        font-weight: inherit;\n      }\n      a {\n        color: inherit;\n        text-decoration: inherit;\n      }\n      pre {\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',\n          'Courier New', monospace;\n      }\n      svg {\n        display: block;\n        vertical-align: middle;\n      }\n      svg {\n        shape-rendering: auto;\n        text-rendering: optimizeLegibility;\n      }\n      pre {\n        background-color: rgba(55, 65, 81, 1);\n        border-radius: 0.25rem;\n        color: rgba(229, 231, 235, 1);\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',\n          'Courier New', monospace;\n        overflow: auto;\n        padding: 0.5rem 0.75rem;\n      }\n      .shadow {\n        box-shadow:\n          0 0 #0000,\n          0 0 #0000,\n          0 10px 15px -3px rgba(0, 0, 0, 0.1),\n          0 4px 6px -2px rgba(0, 0, 0, 0.05);\n      }\n      .rounded {\n        border-radius: 1.5rem;\n      }\n      .wrapper {\n        width: 100%;\n      }\n      .container {\n        margin-left: auto;\n        margin-right: auto;\n        max-width: 768px;\n        padding-bottom: 3rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n        color: rgba(55, 65, 81, 1);\n        width: 100%;\n      }\n      #welcome {\n        margin-top: 2.5rem;\n      }\n      #welcome h1 {\n        font-size: 3rem;\n        font-weight: 500;\n        letter-spacing: -0.025em;\n        line-height: 1;\n      }\n      #welcome span {\n        display: block;\n        font-size: 1.875rem;\n        font-weight: 300;\n        line-height: 2.25rem;\n        margin-bottom: 0.5rem;\n      }\n      #hero {\n        align-items: center;\n        background-color: hsla(214, 62%, 21%, 1);\n        border: none;\n        box-sizing: border-box;\n        color: rgba(55, 65, 81, 1);\n        display: grid;\n        grid-template-columns: 1fr;\n        margin-top: 3.5rem;\n      }\n      #hero .text-container {\n        color: rgba(255, 255, 255, 1);\n        padding: 3rem 2rem;\n      }\n      #hero .text-container h2 {\n        font-size: 1.5rem;\n        line-height: 2rem;\n        position: relative;\n      }\n      #hero .text-container h2 svg {\n        color: hsla(162, 47%, 50%, 1);\n        height: 2rem;\n        left: -0.25rem;\n        position: absolute;\n        top: 0;\n        width: 2rem;\n      }\n      #hero .text-container h2 span {\n        margin-left: 2.5rem;\n      }\n      #hero .text-container a {\n        background-color: rgba(255, 255, 255, 1);\n        border-radius: 0.75rem;\n        color: rgba(55, 65, 81, 1);\n        display: inline-block;\n        margin-top: 1.5rem;\n        padding: 1rem 2rem;\n        text-decoration: inherit;\n      }\n      #hero .logo-container {\n        display: none;\n        justify-content: center;\n        padding-left: 2rem;\n        padding-right: 2rem;\n      }\n      #hero .logo-container svg {\n        color: rgba(255, 255, 255, 1);\n        width: 66.666667%;\n      }\n      #middle-content {\n        align-items: flex-start;\n        display: grid;\n        grid-template-columns: 1fr;\n        margin-top: 3.5rem;\n      }\n      #middle-content #middle-left-content {\n        display: flex;\n        flex-direction: column;\n        gap: 2rem;\n      }\n      #learning-materials {\n        padding: 2.5rem 2rem;\n      }\n      #learning-materials h2 {\n        font-weight: 500;\n        font-size: 1.25rem;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      .list-item-link {\n        align-items: center;\n        border-radius: 0.75rem;\n        display: flex;\n        margin-top: 1rem;\n        padding: 1rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 100%;\n      }\n      .list-item-link svg:first-child {\n        margin-right: 1rem;\n        height: 1.5rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 1.5rem;\n      }\n      .list-item-link > span {\n        flex-grow: 1;\n        font-weight: 400;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      .list-item-link > span > span {\n        color: rgba(107, 114, 128, 1);\n        display: block;\n        flex-grow: 1;\n        font-size: 0.75rem;\n        font-weight: 300;\n        line-height: 1rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      .list-item-link svg:last-child {\n        height: 1rem;\n        transition-property: all;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 1rem;\n      }\n      .list-item-link:hover {\n        color: rgba(255, 255, 255, 1);\n        background-color: hsla(162, 55%, 33%, 1);\n      }\n\n      .list-item-link:hover > span > span {\n        color: rgba(243, 244, 246, 1);\n      }\n      .list-item-link:hover svg:last-child {\n        transform: translateX(0.25rem);\n      }\n\n      .button-pill {\n        padding: 1.5rem 2rem;\n        margin-bottom: 2rem;\n        transition-duration: 300ms;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        align-items: center;\n        display: flex;\n      }\n      .button-pill svg {\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        flex-shrink: 0;\n        width: 3rem;\n      }\n      .button-pill > span {\n        letter-spacing: -0.025em;\n        font-weight: 400;\n        font-size: 1.125rem;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      .button-pill span span {\n        display: block;\n        font-size: 0.875rem;\n        font-weight: 300;\n        line-height: 1.25rem;\n      }\n      .button-pill:hover svg,\n      .button-pill:hover {\n        color: rgba(255, 255, 255, 1) !important;\n      }\n      .nx-console:hover {\n        background-color: rgba(0, 122, 204, 1);\n      }\n      .nx-console svg {\n        color: rgba(0, 122, 204, 1);\n      }\n      .nx-console-jetbrains {\n        margin-top: 2rem;\n      }\n      .nx-console-jetbrains:hover {\n        background-color: rgba(255, 49, 140, 1);\n      }\n      .nx-console-jetbrains svg {\n        color: rgba(255, 49, 140, 1);\n      }\n      #nx-repo:hover {\n        background-color: rgba(24, 23, 23, 1);\n      }\n      #nx-repo svg {\n        color: rgba(24, 23, 23, 1);\n      }\n      #nx-cloud {\n        margin-bottom: 2rem;\n        margin-top: 2rem;\n        padding: 2.5rem 2rem;\n      }\n      #nx-cloud > div {\n        align-items: center;\n        display: flex;\n      }\n      #nx-cloud > div svg {\n        border-radius: 0.375rem;\n        flex-shrink: 0;\n        width: 3rem;\n      }\n      #nx-cloud > div h2 {\n        font-size: 1.125rem;\n        font-weight: 400;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      #nx-cloud > div h2 span {\n        display: block;\n        font-size: 0.875rem;\n        font-weight: 300;\n        line-height: 1.25rem;\n      }\n      #nx-cloud p {\n        font-size: 1rem;\n        line-height: 1.5rem;\n        margin-top: 1rem;\n      }\n      #nx-cloud pre {\n        margin-top: 1rem;\n      }\n      #nx-cloud a {\n        color: rgba(107, 114, 128, 1);\n        display: block;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        margin-top: 1.5rem;\n        text-align: right;\n      }\n      #nx-cloud a:hover {\n        text-decoration: underline;\n      }\n      #commands {\n        padding: 2.5rem 2rem;\n        margin-top: 3.5rem;\n      }\n      #commands h2 {\n        font-size: 1.25rem;\n        font-weight: 400;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      #commands p {\n        font-size: 1rem;\n        font-weight: 300;\n        line-height: 1.5rem;\n        margin-top: 1rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      details {\n        align-items: center;\n        display: flex;\n        margin-top: 1rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n        width: 100%;\n      }\n      details pre > span {\n        color: rgba(181, 181, 181, 1);\n      }\n      summary {\n        border-radius: 0.5rem;\n        display: flex;\n        font-weight: 400;\n        padding: 0.5rem;\n        cursor: pointer;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n      }\n      summary:hover {\n        background-color: rgba(243, 244, 246, 1);\n      }\n      summary svg {\n        height: 1.5rem;\n        margin-right: 1rem;\n        width: 1.5rem;\n      }\n      #love {\n        color: rgba(107, 114, 128, 1);\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        margin-top: 3.5rem;\n        opacity: 0.6;\n        text-align: center;\n      }\n      #love svg {\n        color: rgba(252, 165, 165, 1);\n        width: 1.25rem;\n        height: 1.25rem;\n        display: inline;\n        margin-top: -0.25rem;\n      }\n      @media screen and (min-width: 768px) {\n        #hero {\n          grid-template-columns: repeat(2, minmax(0, 1fr));\n        }\n        #hero .logo-container {\n          display: flex;\n        }\n        #middle-content {\n          grid-template-columns: repeat(2, minmax(0, 1fr));\n          gap: 4rem;\n        }\n      }\n    </style>\n    <div class=\"wrapper\">\n      <div class=\"container\">\n        <!--  WELCOME  -->\n        <div id=\"welcome\">\n          <h1>\n            <span> Hello there, </span>\n            Welcome skeleton 👋\n          </h1>\n        </div>\n        <!--  HERO  -->\n        <div id=\"hero\" class=\"rounded\">\n          <div class=\"text-container\">\n            <h2>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\"\n                />\n              </svg>\n              <span>You&apos;re up and running</span>\n            </h2>\n            <a href=\"#commands\"> What&apos;s next? </a>\n          </div>\n          <div class=\"logo-container\">\n            <svg\n              fill=\"currentColor\"\n              role=\"img\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M11.987 14.138l-3.132 4.923-5.193-8.427-.012 8.822H0V4.544h3.691l5.247 8.833.005-3.998 3.044 4.759zm.601-5.761c.024-.048 0-3.784.008-3.833h-3.65c.002.059-.005 3.776-.003 3.833h3.645zm5.634 4.134a2.061 2.061 0 0 0-1.969 1.336 1.963 1.963 0 0 1 2.343-.739c.396.161.917.422 1.33.283a2.1 2.1 0 0 0-1.704-.88zm3.39 1.061c-.375-.13-.8-.277-1.109-.681-.06-.08-.116-.17-.176-.265a2.143 2.143 0 0 0-.533-.642c-.294-.216-.68-.322-1.18-.322a2.482 2.482 0 0 0-2.294 1.536 2.325 2.325 0 0 1 4.002.388.75.75 0 0 0 .836.334c.493-.105.46.36 1.203.518v-.133c-.003-.446-.246-.55-.75-.733zm2.024 1.266a.723.723 0 0 0 .347-.638c-.01-2.957-2.41-5.487-5.37-5.487a5.364 5.364 0 0 0-4.487 2.418c-.01-.026-1.522-2.39-1.538-2.418H8.943l3.463 5.423-3.379 5.32h3.54l1.54-2.366 1.568 2.366h3.541l-3.21-5.052a.7.7 0 0 1-.084-.32 2.69 2.69 0 0 1 2.69-2.691h.001c1.488 0 1.736.89 2.057 1.308.634.826 1.9.464 1.9 1.541a.707.707 0 0 0 1.066.596zm.35.133c-.173.372-.56.338-.755.639-.176.271.114.412.114.412s.337.156.538-.311c.104-.231.14-.488.103-.74z\"\n              />\n            </svg>\n          </div>\n        </div>\n        <!--  MIDDLE CONTENT  -->\n        <div id=\"middle-content\">\n          <div id=\"middle-left-content\">\n            <div id=\"learning-materials\" class=\"rounded shadow\">\n              <h2>Learning materials</h2>\n              <a\n                href=\"https://nx.dev/getting-started/intro?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n                  />\n                </svg>\n                <span>\n                  Documentation\n                  <span> Everything is in there </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://nx.dev/blog?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\"\n                  />\n                </svg>\n                <span>\n                  Blog\n                  <span> Changelog, features & events </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://www.youtube.com/@NxDevtools/videos?utm_source=nx-project&sub_confirmation=1\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  role=\"img\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <title>YouTube</title>\n                  <path\n                    d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"\n                  />\n                </svg>\n                <span>\n                  YouTube channel\n                  <span> Nx Show, talks & tutorials </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://nx.dev/getting-started/tutorials/angular-standalone-tutorial?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\"\n                  />\n                </svg>\n                <span>\n                  Interactive tutorials\n                  <span> Create an app, step-by-step </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n            </div>\n            <a\n              id=\"nx-repo\"\n              class=\"button-pill rounded shadow\"\n              href=\"https://github.com/nrwl/nx?utm_source=nx-project\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                fill=\"currentColor\"\n                role=\"img\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                />\n              </svg>\n              <span>\n                Nx is open source\n                <span> Love Nx? Give us a star! </span>\n              </span>\n            </a>\n          </div>\n          <div id=\"other-links\">\n            <a\n              class=\"button-pill nx-console rounded shadow\"\n              href=\"https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console&utm_source=nx-project\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                fill=\"currentColor\"\n                role=\"img\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <title>Visual Studio Code</title>\n                <path\n                  d=\"M23.15 2.587L18.21.21a1.494 1.494 0 0 0-1.705.29l-9.46 8.63-4.12-3.128a.999.999 0 0 0-1.276.057L.327 7.261A1 1 0 0 0 .326 8.74L3.899 12 .326 15.26a1 1 0 0 0 .001 1.479L1.65 17.94a.999.999 0 0 0 1.276.057l4.12-3.128 9.46 8.63a1.492 1.492 0 0 0 1.704.29l4.942-2.377A1.5 1.5 0 0 0 24 20.06V3.939a1.5 1.5 0 0 0-.85-1.352zm-5.146 14.861L10.826 12l7.178-5.448v10.896z\"\n                />\n              </svg>\n              <span>\n                Install Nx Console for VSCode\n                <span>The official VSCode extension for Nx.</span>\n              </span>\n            </a>\n            <a\n              class=\"button-pill nx-console-jetbrains rounded shadow\"\n              href=\"https://plugins.jetbrains.com/plugin/21060-nx-console\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg height=\"48\" width=\"48\" viewBox=\"20 20 60 60\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"m22.5 22.5h60v60h-60z\" />\n                <g fill=\"#fff\">\n                  <path d=\"m29.03 71.25h22.5v3.75h-22.5z\" />\n                  <path\n                    d=\"m28.09 38 1.67-1.58a1.88 1.88 0 0 0 1.47.87c.64 0 1.06-.44 1.06-1.31v-5.98h2.58v6a3.48 3.48 0 0 1 -.87 2.6 3.56 3.56 0 0 1 -2.57.95 3.84 3.84 0 0 1 -3.34-1.55z\"\n                  />\n                  <path d=\"m36 30h7.53v2.19h-5v1.44h4.49v2h-4.42v1.49h5v2.21h-7.6z\" />\n                  <path d=\"m47.23 32.29h-2.8v-2.29h8.21v2.27h-2.81v7.1h-2.6z\" />\n                  <path\n                    d=\"m29.13 43.08h4.42a3.53 3.53 0 0 1 2.55.83 2.09 2.09 0 0 1 .6 1.53 2.16 2.16 0 0 1 -1.44 2.09 2.27 2.27 0 0 1 1.86 2.29c0 1.61-1.31 2.59-3.55 2.59h-4.44zm5 2.89c0-.52-.42-.8-1.18-.8h-1.29v1.64h1.24c.79 0 1.25-.26 1.25-.81zm-.9 2.66h-1.57v1.73h1.62c.8 0 1.24-.31 1.24-.86 0-.5-.4-.87-1.27-.87z\"\n                  />\n                  <path\n                    d=\"m38 43.08h4.1a4.19 4.19 0 0 1 3 1 2.93 2.93 0 0 1 .9 2.19 3 3 0 0 1 -1.93 2.89l2.24 3.27h-3l-1.88-2.84h-.87v2.84h-2.56zm4 4.5c.87 0 1.39-.43 1.39-1.11 0-.75-.54-1.12-1.4-1.12h-1.44v2.26z\"\n                  />\n                  <path\n                    d=\"m49.59 43h2.5l4 9.44h-2.79l-.67-1.69h-3.63l-.67 1.69h-2.71zm2.27 5.73-1-2.65-1.06 2.65z\"\n                  />\n                  <path d=\"m56.46 43.05h2.6v9.37h-2.6z\" />\n                  <path d=\"m60.06 43.05h2.42l3.37 5v-5h2.57v9.37h-2.26l-3.53-5.14v5.14h-2.57z\" />\n                  <path\n                    d=\"m68.86 51 1.45-1.73a4.84 4.84 0 0 0 3 1.13c.71 0 1.08-.24 1.08-.65 0-.4-.31-.6-1.59-.91-2-.46-3.53-1-3.53-2.93 0-1.74 1.37-3 3.62-3a5.89 5.89 0 0 1 3.86 1.25l-1.26 1.84a4.63 4.63 0 0 0 -2.62-.92c-.63 0-.94.25-.94.6 0 .42.32.61 1.63.91 2.14.46 3.44 1.16 3.44 2.91 0 1.91-1.51 3-3.79 3a6.58 6.58 0 0 1 -4.35-1.5z\"\n                  />\n                </g>\n              </svg>\n              <span>\n                Install Nx Console for JetBrains\n                <span>Available for WebStorm, Intellij IDEA Ultimate and more!</span>\n              </span>\n            </a>\n            <div id=\"nx-cloud\" class=\"rounded shadow\">\n              <div>\n                <svg\n                  id=\"nx-cloud-logo\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  stroke=\"currentColor\"\n                  fill=\"transparent\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    stroke-width=\"2\"\n                    d=\"M23 3.75V6.5c-3.036 0-5.5 2.464-5.5 5.5s-2.464 5.5-5.5 5.5-5.5 2.464-5.5 5.5H3.75C2.232 23 1 21.768 1 20.25V3.75C1 2.232 2.232 1 3.75 1h16.5C21.768 1 23 2.232 23 3.75Z\"\n                  />\n                  <path\n                    stroke-width=\"2\"\n                    d=\"M23 6v14.1667C23 21.7307 21.7307 23 20.1667 23H6c0-3.128 2.53867-5.6667 5.6667-5.6667 3.128 0 5.6666-2.5386 5.6666-5.6666C17.3333 8.53867 19.872 6 23 6Z\"\n                  />\n                </svg>\n                <h2>\n                  Nx Cloud\n                  <span> Enable faster CI & better DX </span>\n                </h2>\n              </div>\n              <p>You can activate distributed tasks executions and caching by running:</p>\n              <pre>nx connect</pre>\n              <a\n                href=\"https://nx.dev/nx-cloud?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                What is Nx Cloud?\n              </a>\n            </div>\n          </div>\n        </div>\n        <!--  COMMANDS  -->\n        <div id=\"commands\" class=\"rounded shadow\">\n          <h2>Next steps</h2>\n          <p>Here are some things you can do with Nx:</p>\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              Build, test and lint your app\n            </summary>\n            <pre><span># Build</span>\nnx build \n<span># Test</span>\nnx test \n<span># Lint</span>\nnx lint \n<span># Run them together!</span>\nnx run-many -t build test lint</pre>\n          </details>\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              View project details\n            </summary>\n            <pre>nx show project skeleton</pre>\n          </details>\n\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              View interactive project graph\n            </summary>\n            <pre>nx graph</pre>\n          </details>\n\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              Add UI library\n            </summary>\n            <pre><span># Generate UI lib</span>\nnx g &#64;nx/angular:lib ui\n<span># Add a component</span>\nnx g &#64;nx/angular:component ui/src/lib/button</pre>\n          </details>\n        </div>\n        <p id=\"love\">\n          Carefully crafted with\n          <svg\n            fill=\"currentColor\"\n            stroke=\"none\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n            />\n          </svg>\n        </p>\n      </div>\n    </div>\n  `,\n  styles: [],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NxWelcomeComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "NxWelcomeComponent",
            "id": "component-NxWelcomeComponent-9ff26ab1edec21da2dffd4b3edb92ab5004c29efb23c9d3e390680898f8a63b70d5a494673989869f8e836efe159c3d2cac2e8386734c4e7bea01e7b0e1d4a9d-1",
            "file": "apps/todolist/src/app/nx-welcome.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nx-welcome",
            "styleUrls": [],
            "styles": [],
            "template": "    <!--\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     This is a starter component and can be deleted.\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     Delete this file and get started with your project!\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     -->\n    <style>\n      html {\n        -webkit-text-size-adjust: 100%;\n        font-family:\n          ui-sans-serif,\n          system-ui,\n          -apple-system,\n          BlinkMacSystemFont,\n          'Segoe UI',\n          Roboto,\n          'Helvetica Neue',\n          Arial,\n          'Noto Sans',\n          sans-serif,\n          'Apple Color Emoji',\n          'Segoe UI Emoji',\n          'Segoe UI Symbol',\n          'Noto Color Emoji';\n        line-height: 1.5;\n        tab-size: 4;\n        scroll-behavior: smooth;\n      }\n      body {\n        font-family: inherit;\n        line-height: inherit;\n        margin: 0;\n      }\n      h1,\n      h2,\n      p,\n      pre {\n        margin: 0;\n      }\n      *,\n      ::before,\n      ::after {\n        box-sizing: border-box;\n        border-width: 0;\n        border-style: solid;\n        border-color: currentColor;\n      }\n      h1,\n      h2 {\n        font-size: inherit;\n        font-weight: inherit;\n      }\n      a {\n        color: inherit;\n        text-decoration: inherit;\n      }\n      pre {\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',\n          'Courier New', monospace;\n      }\n      svg {\n        display: block;\n        vertical-align: middle;\n      }\n      svg {\n        shape-rendering: auto;\n        text-rendering: optimizeLegibility;\n      }\n      pre {\n        background-color: rgba(55, 65, 81, 1);\n        border-radius: 0.25rem;\n        color: rgba(229, 231, 235, 1);\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',\n          'Courier New', monospace;\n        overflow: auto;\n        padding: 0.5rem 0.75rem;\n      }\n      .shadow {\n        box-shadow:\n          0 0 #0000,\n          0 0 #0000,\n          0 10px 15px -3px rgba(0, 0, 0, 0.1),\n          0 4px 6px -2px rgba(0, 0, 0, 0.05);\n      }\n      .rounded {\n        border-radius: 1.5rem;\n      }\n      .wrapper {\n        width: 100%;\n      }\n      .container {\n        margin-left: auto;\n        margin-right: auto;\n        max-width: 768px;\n        padding-bottom: 3rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n        color: rgba(55, 65, 81, 1);\n        width: 100%;\n      }\n      #welcome {\n        margin-top: 2.5rem;\n      }\n      #welcome h1 {\n        font-size: 3rem;\n        font-weight: 500;\n        letter-spacing: -0.025em;\n        line-height: 1;\n      }\n      #welcome span {\n        display: block;\n        font-size: 1.875rem;\n        font-weight: 300;\n        line-height: 2.25rem;\n        margin-bottom: 0.5rem;\n      }\n      #hero {\n        align-items: center;\n        background-color: hsla(214, 62%, 21%, 1);\n        border: none;\n        box-sizing: border-box;\n        color: rgba(55, 65, 81, 1);\n        display: grid;\n        grid-template-columns: 1fr;\n        margin-top: 3.5rem;\n      }\n      #hero .text-container {\n        color: rgba(255, 255, 255, 1);\n        padding: 3rem 2rem;\n      }\n      #hero .text-container h2 {\n        font-size: 1.5rem;\n        line-height: 2rem;\n        position: relative;\n      }\n      #hero .text-container h2 svg {\n        color: hsla(162, 47%, 50%, 1);\n        height: 2rem;\n        left: -0.25rem;\n        position: absolute;\n        top: 0;\n        width: 2rem;\n      }\n      #hero .text-container h2 span {\n        margin-left: 2.5rem;\n      }\n      #hero .text-container a {\n        background-color: rgba(255, 255, 255, 1);\n        border-radius: 0.75rem;\n        color: rgba(55, 65, 81, 1);\n        display: inline-block;\n        margin-top: 1.5rem;\n        padding: 1rem 2rem;\n        text-decoration: inherit;\n      }\n      #hero .logo-container {\n        display: none;\n        justify-content: center;\n        padding-left: 2rem;\n        padding-right: 2rem;\n      }\n      #hero .logo-container svg {\n        color: rgba(255, 255, 255, 1);\n        width: 66.666667%;\n      }\n      #middle-content {\n        align-items: flex-start;\n        display: grid;\n        grid-template-columns: 1fr;\n        margin-top: 3.5rem;\n      }\n      #middle-content #middle-left-content {\n        display: flex;\n        flex-direction: column;\n        gap: 2rem;\n      }\n      #learning-materials {\n        padding: 2.5rem 2rem;\n      }\n      #learning-materials h2 {\n        font-weight: 500;\n        font-size: 1.25rem;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      .list-item-link {\n        align-items: center;\n        border-radius: 0.75rem;\n        display: flex;\n        margin-top: 1rem;\n        padding: 1rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 100%;\n      }\n      .list-item-link svg:first-child {\n        margin-right: 1rem;\n        height: 1.5rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 1.5rem;\n      }\n      .list-item-link > span {\n        flex-grow: 1;\n        font-weight: 400;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      .list-item-link > span > span {\n        color: rgba(107, 114, 128, 1);\n        display: block;\n        flex-grow: 1;\n        font-size: 0.75rem;\n        font-weight: 300;\n        line-height: 1rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      .list-item-link svg:last-child {\n        height: 1rem;\n        transition-property: all;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 1rem;\n      }\n      .list-item-link:hover {\n        color: rgba(255, 255, 255, 1);\n        background-color: hsla(162, 55%, 33%, 1);\n      }\n\n      .list-item-link:hover > span > span {\n        color: rgba(243, 244, 246, 1);\n      }\n      .list-item-link:hover svg:last-child {\n        transform: translateX(0.25rem);\n      }\n\n      .button-pill {\n        padding: 1.5rem 2rem;\n        margin-bottom: 2rem;\n        transition-duration: 300ms;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        align-items: center;\n        display: flex;\n      }\n      .button-pill svg {\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        flex-shrink: 0;\n        width: 3rem;\n      }\n      .button-pill > span {\n        letter-spacing: -0.025em;\n        font-weight: 400;\n        font-size: 1.125rem;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      .button-pill span span {\n        display: block;\n        font-size: 0.875rem;\n        font-weight: 300;\n        line-height: 1.25rem;\n      }\n      .button-pill:hover svg,\n      .button-pill:hover {\n        color: rgba(255, 255, 255, 1) !important;\n      }\n      .nx-console:hover {\n        background-color: rgba(0, 122, 204, 1);\n      }\n      .nx-console svg {\n        color: rgba(0, 122, 204, 1);\n      }\n      .nx-console-jetbrains {\n        margin-top: 2rem;\n      }\n      .nx-console-jetbrains:hover {\n        background-color: rgba(255, 49, 140, 1);\n      }\n      .nx-console-jetbrains svg {\n        color: rgba(255, 49, 140, 1);\n      }\n      #nx-repo:hover {\n        background-color: rgba(24, 23, 23, 1);\n      }\n      #nx-repo svg {\n        color: rgba(24, 23, 23, 1);\n      }\n      #nx-cloud {\n        margin-bottom: 2rem;\n        margin-top: 2rem;\n        padding: 2.5rem 2rem;\n      }\n      #nx-cloud > div {\n        align-items: center;\n        display: flex;\n      }\n      #nx-cloud > div svg {\n        border-radius: 0.375rem;\n        flex-shrink: 0;\n        width: 3rem;\n      }\n      #nx-cloud > div h2 {\n        font-size: 1.125rem;\n        font-weight: 400;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      #nx-cloud > div h2 span {\n        display: block;\n        font-size: 0.875rem;\n        font-weight: 300;\n        line-height: 1.25rem;\n      }\n      #nx-cloud p {\n        font-size: 1rem;\n        line-height: 1.5rem;\n        margin-top: 1rem;\n      }\n      #nx-cloud pre {\n        margin-top: 1rem;\n      }\n      #nx-cloud a {\n        color: rgba(107, 114, 128, 1);\n        display: block;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        margin-top: 1.5rem;\n        text-align: right;\n      }\n      #nx-cloud a:hover {\n        text-decoration: underline;\n      }\n      #commands {\n        padding: 2.5rem 2rem;\n        margin-top: 3.5rem;\n      }\n      #commands h2 {\n        font-size: 1.25rem;\n        font-weight: 400;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      #commands p {\n        font-size: 1rem;\n        font-weight: 300;\n        line-height: 1.5rem;\n        margin-top: 1rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      details {\n        align-items: center;\n        display: flex;\n        margin-top: 1rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n        width: 100%;\n      }\n      details pre > span {\n        color: rgba(181, 181, 181, 1);\n      }\n      summary {\n        border-radius: 0.5rem;\n        display: flex;\n        font-weight: 400;\n        padding: 0.5rem;\n        cursor: pointer;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n      }\n      summary:hover {\n        background-color: rgba(243, 244, 246, 1);\n      }\n      summary svg {\n        height: 1.5rem;\n        margin-right: 1rem;\n        width: 1.5rem;\n      }\n      #love {\n        color: rgba(107, 114, 128, 1);\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        margin-top: 3.5rem;\n        opacity: 0.6;\n        text-align: center;\n      }\n      #love svg {\n        color: rgba(252, 165, 165, 1);\n        width: 1.25rem;\n        height: 1.25rem;\n        display: inline;\n        margin-top: -0.25rem;\n      }\n      @media screen and (min-width: 768px) {\n        #hero {\n          grid-template-columns: repeat(2, minmax(0, 1fr));\n        }\n        #hero .logo-container {\n          display: flex;\n        }\n        #middle-content {\n          grid-template-columns: repeat(2, minmax(0, 1fr));\n          gap: 4rem;\n        }\n      }\n    </style>\n    <div class=\"wrapper\">\n      <div class=\"container\">\n        <!--  WELCOME  -->\n        <div id=\"welcome\">\n          <h1>\n            <span> Hello there, </span>\n            Welcome todolist 👋\n          </h1>\n        </div>\n        <!--  HERO  -->\n        <div id=\"hero\" class=\"rounded\">\n          <div class=\"text-container\">\n            <h2>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\"\n                />\n              </svg>\n              <span>You&apos;re up and running</span>\n            </h2>\n            <a href=\"#commands\"> What&apos;s next? </a>\n          </div>\n          <div class=\"logo-container\">\n            <svg\n              fill=\"currentColor\"\n              role=\"img\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M11.987 14.138l-3.132 4.923-5.193-8.427-.012 8.822H0V4.544h3.691l5.247 8.833.005-3.998 3.044 4.759zm.601-5.761c.024-.048 0-3.784.008-3.833h-3.65c.002.059-.005 3.776-.003 3.833h3.645zm5.634 4.134a2.061 2.061 0 0 0-1.969 1.336 1.963 1.963 0 0 1 2.343-.739c.396.161.917.422 1.33.283a2.1 2.1 0 0 0-1.704-.88zm3.39 1.061c-.375-.13-.8-.277-1.109-.681-.06-.08-.116-.17-.176-.265a2.143 2.143 0 0 0-.533-.642c-.294-.216-.68-.322-1.18-.322a2.482 2.482 0 0 0-2.294 1.536 2.325 2.325 0 0 1 4.002.388.75.75 0 0 0 .836.334c.493-.105.46.36 1.203.518v-.133c-.003-.446-.246-.55-.75-.733zm2.024 1.266a.723.723 0 0 0 .347-.638c-.01-2.957-2.41-5.487-5.37-5.487a5.364 5.364 0 0 0-4.487 2.418c-.01-.026-1.522-2.39-1.538-2.418H8.943l3.463 5.423-3.379 5.32h3.54l1.54-2.366 1.568 2.366h3.541l-3.21-5.052a.7.7 0 0 1-.084-.32 2.69 2.69 0 0 1 2.69-2.691h.001c1.488 0 1.736.89 2.057 1.308.634.826 1.9.464 1.9 1.541a.707.707 0 0 0 1.066.596zm.35.133c-.173.372-.56.338-.755.639-.176.271.114.412.114.412s.337.156.538-.311c.104-.231.14-.488.103-.74z\"\n              />\n            </svg>\n          </div>\n        </div>\n        <!--  MIDDLE CONTENT  -->\n        <div id=\"middle-content\">\n          <div id=\"middle-left-content\">\n            <div id=\"learning-materials\" class=\"rounded shadow\">\n              <h2>Learning materials</h2>\n              <a\n                href=\"https://nx.dev/getting-started/intro?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n                  />\n                </svg>\n                <span>\n                  Documentation\n                  <span> Everything is in there </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://nx.dev/blog?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\"\n                  />\n                </svg>\n                <span>\n                  Blog\n                  <span> Changelog, features & events </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://www.youtube.com/@NxDevtools/videos?utm_source=nx-project&sub_confirmation=1\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  role=\"img\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <title>YouTube</title>\n                  <path\n                    d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"\n                  />\n                </svg>\n                <span>\n                  YouTube channel\n                  <span> Nx Show, talks & tutorials </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://nx.dev/getting-started/tutorials/angular-standalone-tutorial?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\"\n                  />\n                </svg>\n                <span>\n                  Interactive tutorials\n                  <span> Create an app, step-by-step </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n            </div>\n            <a\n              id=\"nx-repo\"\n              class=\"button-pill rounded shadow\"\n              href=\"https://github.com/nrwl/nx?utm_source=nx-project\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                fill=\"currentColor\"\n                role=\"img\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                />\n              </svg>\n              <span>\n                Nx is open source\n                <span> Love Nx? Give us a star! </span>\n              </span>\n            </a>\n          </div>\n          <div id=\"other-links\">\n            <a\n              class=\"button-pill nx-console rounded shadow\"\n              href=\"https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console&utm_source=nx-project\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                fill=\"currentColor\"\n                role=\"img\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <title>Visual Studio Code</title>\n                <path\n                  d=\"M23.15 2.587L18.21.21a1.494 1.494 0 0 0-1.705.29l-9.46 8.63-4.12-3.128a.999.999 0 0 0-1.276.057L.327 7.261A1 1 0 0 0 .326 8.74L3.899 12 .326 15.26a1 1 0 0 0 .001 1.479L1.65 17.94a.999.999 0 0 0 1.276.057l4.12-3.128 9.46 8.63a1.492 1.492 0 0 0 1.704.29l4.942-2.377A1.5 1.5 0 0 0 24 20.06V3.939a1.5 1.5 0 0 0-.85-1.352zm-5.146 14.861L10.826 12l7.178-5.448v10.896z\"\n                />\n              </svg>\n              <span>\n                Install Nx Console for VSCode\n                <span>The official VSCode extension for Nx.</span>\n              </span>\n            </a>\n            <a\n              class=\"button-pill nx-console-jetbrains rounded shadow\"\n              href=\"https://plugins.jetbrains.com/plugin/21060-nx-console\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg height=\"48\" width=\"48\" viewBox=\"20 20 60 60\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"m22.5 22.5h60v60h-60z\" />\n                <g fill=\"#fff\">\n                  <path d=\"m29.03 71.25h22.5v3.75h-22.5z\" />\n                  <path\n                    d=\"m28.09 38 1.67-1.58a1.88 1.88 0 0 0 1.47.87c.64 0 1.06-.44 1.06-1.31v-5.98h2.58v6a3.48 3.48 0 0 1 -.87 2.6 3.56 3.56 0 0 1 -2.57.95 3.84 3.84 0 0 1 -3.34-1.55z\"\n                  />\n                  <path d=\"m36 30h7.53v2.19h-5v1.44h4.49v2h-4.42v1.49h5v2.21h-7.6z\" />\n                  <path d=\"m47.23 32.29h-2.8v-2.29h8.21v2.27h-2.81v7.1h-2.6z\" />\n                  <path\n                    d=\"m29.13 43.08h4.42a3.53 3.53 0 0 1 2.55.83 2.09 2.09 0 0 1 .6 1.53 2.16 2.16 0 0 1 -1.44 2.09 2.27 2.27 0 0 1 1.86 2.29c0 1.61-1.31 2.59-3.55 2.59h-4.44zm5 2.89c0-.52-.42-.8-1.18-.8h-1.29v1.64h1.24c.79 0 1.25-.26 1.25-.81zm-.9 2.66h-1.57v1.73h1.62c.8 0 1.24-.31 1.24-.86 0-.5-.4-.87-1.27-.87z\"\n                  />\n                  <path\n                    d=\"m38 43.08h4.1a4.19 4.19 0 0 1 3 1 2.93 2.93 0 0 1 .9 2.19 3 3 0 0 1 -1.93 2.89l2.24 3.27h-3l-1.88-2.84h-.87v2.84h-2.56zm4 4.5c.87 0 1.39-.43 1.39-1.11 0-.75-.54-1.12-1.4-1.12h-1.44v2.26z\"\n                  />\n                  <path\n                    d=\"m49.59 43h2.5l4 9.44h-2.79l-.67-1.69h-3.63l-.67 1.69h-2.71zm2.27 5.73-1-2.65-1.06 2.65z\"\n                  />\n                  <path d=\"m56.46 43.05h2.6v9.37h-2.6z\" />\n                  <path d=\"m60.06 43.05h2.42l3.37 5v-5h2.57v9.37h-2.26l-3.53-5.14v5.14h-2.57z\" />\n                  <path\n                    d=\"m68.86 51 1.45-1.73a4.84 4.84 0 0 0 3 1.13c.71 0 1.08-.24 1.08-.65 0-.4-.31-.6-1.59-.91-2-.46-3.53-1-3.53-2.93 0-1.74 1.37-3 3.62-3a5.89 5.89 0 0 1 3.86 1.25l-1.26 1.84a4.63 4.63 0 0 0 -2.62-.92c-.63 0-.94.25-.94.6 0 .42.32.61 1.63.91 2.14.46 3.44 1.16 3.44 2.91 0 1.91-1.51 3-3.79 3a6.58 6.58 0 0 1 -4.35-1.5z\"\n                  />\n                </g>\n              </svg>\n              <span>\n                Install Nx Console for JetBrains\n                <span>Available for WebStorm, Intellij IDEA Ultimate and more!</span>\n              </span>\n            </a>\n            <div id=\"nx-cloud\" class=\"rounded shadow\">\n              <div>\n                <svg\n                  id=\"nx-cloud-logo\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  stroke=\"currentColor\"\n                  fill=\"transparent\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    stroke-width=\"2\"\n                    d=\"M23 3.75V6.5c-3.036 0-5.5 2.464-5.5 5.5s-2.464 5.5-5.5 5.5-5.5 2.464-5.5 5.5H3.75C2.232 23 1 21.768 1 20.25V3.75C1 2.232 2.232 1 3.75 1h16.5C21.768 1 23 2.232 23 3.75Z\"\n                  />\n                  <path\n                    stroke-width=\"2\"\n                    d=\"M23 6v14.1667C23 21.7307 21.7307 23 20.1667 23H6c0-3.128 2.53867-5.6667 5.6667-5.6667 3.128 0 5.6666-2.5386 5.6666-5.6666C17.3333 8.53867 19.872 6 23 6Z\"\n                  />\n                </svg>\n                <h2>\n                  Nx Cloud\n                  <span> Enable faster CI & better DX </span>\n                </h2>\n              </div>\n              <p>You can activate distributed tasks executions and caching by running:</p>\n              <pre>nx connect</pre>\n              <a\n                href=\"https://nx.dev/nx-cloud?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                What is Nx Cloud?\n              </a>\n            </div>\n          </div>\n        </div>\n        <!--  COMMANDS  -->\n        <div id=\"commands\" class=\"rounded shadow\">\n          <h2>Next steps</h2>\n          <p>Here are some things you can do with Nx:</p>\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              Build, test and lint your app\n            </summary>\n            <pre><span># Build</span>\nnx build\n<span># Test</span>\nnx test\n<span># Lint</span>\nnx lint\n<span># Run them together!</span>\nnx run-many -t build test lint</pre>\n          </details>\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              View project details\n            </summary>\n            <pre>nx show project todolist</pre>\n          </details>\n\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              View interactive project graph\n            </summary>\n            <pre>nx graph</pre>\n          </details>\n\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              Add UI library\n            </summary>\n            <pre><span># Generate UI lib</span>\nnx g &#64;nx/angular:lib ui\n<span># Add a component</span>\nnx g &#64;nx/angular:component ui/src/lib/button</pre>\n          </details>\n        </div>\n        <p id=\"love\">\n          Carefully crafted with\n          <svg\n            fill=\"currentColor\"\n            stroke=\"none\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n            />\n          </svg>\n        </p>\n      </div>\n    </div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-nx-welcome',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <!--\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     This is a starter component and can be deleted.\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     Delete this file and get started with your project!\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     -->\n    <style>\n      html {\n        -webkit-text-size-adjust: 100%;\n        font-family:\n          ui-sans-serif,\n          system-ui,\n          -apple-system,\n          BlinkMacSystemFont,\n          'Segoe UI',\n          Roboto,\n          'Helvetica Neue',\n          Arial,\n          'Noto Sans',\n          sans-serif,\n          'Apple Color Emoji',\n          'Segoe UI Emoji',\n          'Segoe UI Symbol',\n          'Noto Color Emoji';\n        line-height: 1.5;\n        tab-size: 4;\n        scroll-behavior: smooth;\n      }\n      body {\n        font-family: inherit;\n        line-height: inherit;\n        margin: 0;\n      }\n      h1,\n      h2,\n      p,\n      pre {\n        margin: 0;\n      }\n      *,\n      ::before,\n      ::after {\n        box-sizing: border-box;\n        border-width: 0;\n        border-style: solid;\n        border-color: currentColor;\n      }\n      h1,\n      h2 {\n        font-size: inherit;\n        font-weight: inherit;\n      }\n      a {\n        color: inherit;\n        text-decoration: inherit;\n      }\n      pre {\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',\n          'Courier New', monospace;\n      }\n      svg {\n        display: block;\n        vertical-align: middle;\n      }\n      svg {\n        shape-rendering: auto;\n        text-rendering: optimizeLegibility;\n      }\n      pre {\n        background-color: rgba(55, 65, 81, 1);\n        border-radius: 0.25rem;\n        color: rgba(229, 231, 235, 1);\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',\n          'Courier New', monospace;\n        overflow: auto;\n        padding: 0.5rem 0.75rem;\n      }\n      .shadow {\n        box-shadow:\n          0 0 #0000,\n          0 0 #0000,\n          0 10px 15px -3px rgba(0, 0, 0, 0.1),\n          0 4px 6px -2px rgba(0, 0, 0, 0.05);\n      }\n      .rounded {\n        border-radius: 1.5rem;\n      }\n      .wrapper {\n        width: 100%;\n      }\n      .container {\n        margin-left: auto;\n        margin-right: auto;\n        max-width: 768px;\n        padding-bottom: 3rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n        color: rgba(55, 65, 81, 1);\n        width: 100%;\n      }\n      #welcome {\n        margin-top: 2.5rem;\n      }\n      #welcome h1 {\n        font-size: 3rem;\n        font-weight: 500;\n        letter-spacing: -0.025em;\n        line-height: 1;\n      }\n      #welcome span {\n        display: block;\n        font-size: 1.875rem;\n        font-weight: 300;\n        line-height: 2.25rem;\n        margin-bottom: 0.5rem;\n      }\n      #hero {\n        align-items: center;\n        background-color: hsla(214, 62%, 21%, 1);\n        border: none;\n        box-sizing: border-box;\n        color: rgba(55, 65, 81, 1);\n        display: grid;\n        grid-template-columns: 1fr;\n        margin-top: 3.5rem;\n      }\n      #hero .text-container {\n        color: rgba(255, 255, 255, 1);\n        padding: 3rem 2rem;\n      }\n      #hero .text-container h2 {\n        font-size: 1.5rem;\n        line-height: 2rem;\n        position: relative;\n      }\n      #hero .text-container h2 svg {\n        color: hsla(162, 47%, 50%, 1);\n        height: 2rem;\n        left: -0.25rem;\n        position: absolute;\n        top: 0;\n        width: 2rem;\n      }\n      #hero .text-container h2 span {\n        margin-left: 2.5rem;\n      }\n      #hero .text-container a {\n        background-color: rgba(255, 255, 255, 1);\n        border-radius: 0.75rem;\n        color: rgba(55, 65, 81, 1);\n        display: inline-block;\n        margin-top: 1.5rem;\n        padding: 1rem 2rem;\n        text-decoration: inherit;\n      }\n      #hero .logo-container {\n        display: none;\n        justify-content: center;\n        padding-left: 2rem;\n        padding-right: 2rem;\n      }\n      #hero .logo-container svg {\n        color: rgba(255, 255, 255, 1);\n        width: 66.666667%;\n      }\n      #middle-content {\n        align-items: flex-start;\n        display: grid;\n        grid-template-columns: 1fr;\n        margin-top: 3.5rem;\n      }\n      #middle-content #middle-left-content {\n        display: flex;\n        flex-direction: column;\n        gap: 2rem;\n      }\n      #learning-materials {\n        padding: 2.5rem 2rem;\n      }\n      #learning-materials h2 {\n        font-weight: 500;\n        font-size: 1.25rem;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      .list-item-link {\n        align-items: center;\n        border-radius: 0.75rem;\n        display: flex;\n        margin-top: 1rem;\n        padding: 1rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 100%;\n      }\n      .list-item-link svg:first-child {\n        margin-right: 1rem;\n        height: 1.5rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 1.5rem;\n      }\n      .list-item-link > span {\n        flex-grow: 1;\n        font-weight: 400;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      .list-item-link > span > span {\n        color: rgba(107, 114, 128, 1);\n        display: block;\n        flex-grow: 1;\n        font-size: 0.75rem;\n        font-weight: 300;\n        line-height: 1rem;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      .list-item-link svg:last-child {\n        height: 1rem;\n        transition-property: all;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        width: 1rem;\n      }\n      .list-item-link:hover {\n        color: rgba(255, 255, 255, 1);\n        background-color: hsla(162, 55%, 33%, 1);\n      }\n\n      .list-item-link:hover > span > span {\n        color: rgba(243, 244, 246, 1);\n      }\n      .list-item-link:hover svg:last-child {\n        transform: translateX(0.25rem);\n      }\n\n      .button-pill {\n        padding: 1.5rem 2rem;\n        margin-bottom: 2rem;\n        transition-duration: 300ms;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        align-items: center;\n        display: flex;\n      }\n      .button-pill svg {\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n        flex-shrink: 0;\n        width: 3rem;\n      }\n      .button-pill > span {\n        letter-spacing: -0.025em;\n        font-weight: 400;\n        font-size: 1.125rem;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      .button-pill span span {\n        display: block;\n        font-size: 0.875rem;\n        font-weight: 300;\n        line-height: 1.25rem;\n      }\n      .button-pill:hover svg,\n      .button-pill:hover {\n        color: rgba(255, 255, 255, 1) !important;\n      }\n      .nx-console:hover {\n        background-color: rgba(0, 122, 204, 1);\n      }\n      .nx-console svg {\n        color: rgba(0, 122, 204, 1);\n      }\n      .nx-console-jetbrains {\n        margin-top: 2rem;\n      }\n      .nx-console-jetbrains:hover {\n        background-color: rgba(255, 49, 140, 1);\n      }\n      .nx-console-jetbrains svg {\n        color: rgba(255, 49, 140, 1);\n      }\n      #nx-repo:hover {\n        background-color: rgba(24, 23, 23, 1);\n      }\n      #nx-repo svg {\n        color: rgba(24, 23, 23, 1);\n      }\n      #nx-cloud {\n        margin-bottom: 2rem;\n        margin-top: 2rem;\n        padding: 2.5rem 2rem;\n      }\n      #nx-cloud > div {\n        align-items: center;\n        display: flex;\n      }\n      #nx-cloud > div svg {\n        border-radius: 0.375rem;\n        flex-shrink: 0;\n        width: 3rem;\n      }\n      #nx-cloud > div h2 {\n        font-size: 1.125rem;\n        font-weight: 400;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      #nx-cloud > div h2 span {\n        display: block;\n        font-size: 0.875rem;\n        font-weight: 300;\n        line-height: 1.25rem;\n      }\n      #nx-cloud p {\n        font-size: 1rem;\n        line-height: 1.5rem;\n        margin-top: 1rem;\n      }\n      #nx-cloud pre {\n        margin-top: 1rem;\n      }\n      #nx-cloud a {\n        color: rgba(107, 114, 128, 1);\n        display: block;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        margin-top: 1.5rem;\n        text-align: right;\n      }\n      #nx-cloud a:hover {\n        text-decoration: underline;\n      }\n      #commands {\n        padding: 2.5rem 2rem;\n        margin-top: 3.5rem;\n      }\n      #commands h2 {\n        font-size: 1.25rem;\n        font-weight: 400;\n        letter-spacing: -0.025em;\n        line-height: 1.75rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      #commands p {\n        font-size: 1rem;\n        font-weight: 300;\n        line-height: 1.5rem;\n        margin-top: 1rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n      }\n      details {\n        align-items: center;\n        display: flex;\n        margin-top: 1rem;\n        padding-left: 1rem;\n        padding-right: 1rem;\n        width: 100%;\n      }\n      details pre > span {\n        color: rgba(181, 181, 181, 1);\n      }\n      summary {\n        border-radius: 0.5rem;\n        display: flex;\n        font-weight: 400;\n        padding: 0.5rem;\n        cursor: pointer;\n        transition-property:\n          background-color,\n          border-color,\n          color,\n          fill,\n          stroke,\n          opacity,\n          box-shadow,\n          transform,\n          filter,\n          backdrop-filter,\n          -webkit-backdrop-filter;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n      }\n      summary:hover {\n        background-color: rgba(243, 244, 246, 1);\n      }\n      summary svg {\n        height: 1.5rem;\n        margin-right: 1rem;\n        width: 1.5rem;\n      }\n      #love {\n        color: rgba(107, 114, 128, 1);\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        margin-top: 3.5rem;\n        opacity: 0.6;\n        text-align: center;\n      }\n      #love svg {\n        color: rgba(252, 165, 165, 1);\n        width: 1.25rem;\n        height: 1.25rem;\n        display: inline;\n        margin-top: -0.25rem;\n      }\n      @media screen and (min-width: 768px) {\n        #hero {\n          grid-template-columns: repeat(2, minmax(0, 1fr));\n        }\n        #hero .logo-container {\n          display: flex;\n        }\n        #middle-content {\n          grid-template-columns: repeat(2, minmax(0, 1fr));\n          gap: 4rem;\n        }\n      }\n    </style>\n    <div class=\"wrapper\">\n      <div class=\"container\">\n        <!--  WELCOME  -->\n        <div id=\"welcome\">\n          <h1>\n            <span> Hello there, </span>\n            Welcome todolist 👋\n          </h1>\n        </div>\n        <!--  HERO  -->\n        <div id=\"hero\" class=\"rounded\">\n          <div class=\"text-container\">\n            <h2>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\"\n                />\n              </svg>\n              <span>You&apos;re up and running</span>\n            </h2>\n            <a href=\"#commands\"> What&apos;s next? </a>\n          </div>\n          <div class=\"logo-container\">\n            <svg\n              fill=\"currentColor\"\n              role=\"img\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M11.987 14.138l-3.132 4.923-5.193-8.427-.012 8.822H0V4.544h3.691l5.247 8.833.005-3.998 3.044 4.759zm.601-5.761c.024-.048 0-3.784.008-3.833h-3.65c.002.059-.005 3.776-.003 3.833h3.645zm5.634 4.134a2.061 2.061 0 0 0-1.969 1.336 1.963 1.963 0 0 1 2.343-.739c.396.161.917.422 1.33.283a2.1 2.1 0 0 0-1.704-.88zm3.39 1.061c-.375-.13-.8-.277-1.109-.681-.06-.08-.116-.17-.176-.265a2.143 2.143 0 0 0-.533-.642c-.294-.216-.68-.322-1.18-.322a2.482 2.482 0 0 0-2.294 1.536 2.325 2.325 0 0 1 4.002.388.75.75 0 0 0 .836.334c.493-.105.46.36 1.203.518v-.133c-.003-.446-.246-.55-.75-.733zm2.024 1.266a.723.723 0 0 0 .347-.638c-.01-2.957-2.41-5.487-5.37-5.487a5.364 5.364 0 0 0-4.487 2.418c-.01-.026-1.522-2.39-1.538-2.418H8.943l3.463 5.423-3.379 5.32h3.54l1.54-2.366 1.568 2.366h3.541l-3.21-5.052a.7.7 0 0 1-.084-.32 2.69 2.69 0 0 1 2.69-2.691h.001c1.488 0 1.736.89 2.057 1.308.634.826 1.9.464 1.9 1.541a.707.707 0 0 0 1.066.596zm.35.133c-.173.372-.56.338-.755.639-.176.271.114.412.114.412s.337.156.538-.311c.104-.231.14-.488.103-.74z\"\n              />\n            </svg>\n          </div>\n        </div>\n        <!--  MIDDLE CONTENT  -->\n        <div id=\"middle-content\">\n          <div id=\"middle-left-content\">\n            <div id=\"learning-materials\" class=\"rounded shadow\">\n              <h2>Learning materials</h2>\n              <a\n                href=\"https://nx.dev/getting-started/intro?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n                  />\n                </svg>\n                <span>\n                  Documentation\n                  <span> Everything is in there </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://nx.dev/blog?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\"\n                  />\n                </svg>\n                <span>\n                  Blog\n                  <span> Changelog, features & events </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://www.youtube.com/@NxDevtools/videos?utm_source=nx-project&sub_confirmation=1\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  role=\"img\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <title>YouTube</title>\n                  <path\n                    d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"\n                  />\n                </svg>\n                <span>\n                  YouTube channel\n                  <span> Nx Show, talks & tutorials </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"https://nx.dev/getting-started/tutorials/angular-standalone-tutorial?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                class=\"list-item-link\"\n              >\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\"\n                  />\n                </svg>\n                <span>\n                  Interactive tutorials\n                  <span> Create an app, step-by-step </span>\n                </span>\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  />\n                </svg>\n              </a>\n            </div>\n            <a\n              id=\"nx-repo\"\n              class=\"button-pill rounded shadow\"\n              href=\"https://github.com/nrwl/nx?utm_source=nx-project\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                fill=\"currentColor\"\n                role=\"img\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                />\n              </svg>\n              <span>\n                Nx is open source\n                <span> Love Nx? Give us a star! </span>\n              </span>\n            </a>\n          </div>\n          <div id=\"other-links\">\n            <a\n              class=\"button-pill nx-console rounded shadow\"\n              href=\"https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console&utm_source=nx-project\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                fill=\"currentColor\"\n                role=\"img\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <title>Visual Studio Code</title>\n                <path\n                  d=\"M23.15 2.587L18.21.21a1.494 1.494 0 0 0-1.705.29l-9.46 8.63-4.12-3.128a.999.999 0 0 0-1.276.057L.327 7.261A1 1 0 0 0 .326 8.74L3.899 12 .326 15.26a1 1 0 0 0 .001 1.479L1.65 17.94a.999.999 0 0 0 1.276.057l4.12-3.128 9.46 8.63a1.492 1.492 0 0 0 1.704.29l4.942-2.377A1.5 1.5 0 0 0 24 20.06V3.939a1.5 1.5 0 0 0-.85-1.352zm-5.146 14.861L10.826 12l7.178-5.448v10.896z\"\n                />\n              </svg>\n              <span>\n                Install Nx Console for VSCode\n                <span>The official VSCode extension for Nx.</span>\n              </span>\n            </a>\n            <a\n              class=\"button-pill nx-console-jetbrains rounded shadow\"\n              href=\"https://plugins.jetbrains.com/plugin/21060-nx-console\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg height=\"48\" width=\"48\" viewBox=\"20 20 60 60\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"m22.5 22.5h60v60h-60z\" />\n                <g fill=\"#fff\">\n                  <path d=\"m29.03 71.25h22.5v3.75h-22.5z\" />\n                  <path\n                    d=\"m28.09 38 1.67-1.58a1.88 1.88 0 0 0 1.47.87c.64 0 1.06-.44 1.06-1.31v-5.98h2.58v6a3.48 3.48 0 0 1 -.87 2.6 3.56 3.56 0 0 1 -2.57.95 3.84 3.84 0 0 1 -3.34-1.55z\"\n                  />\n                  <path d=\"m36 30h7.53v2.19h-5v1.44h4.49v2h-4.42v1.49h5v2.21h-7.6z\" />\n                  <path d=\"m47.23 32.29h-2.8v-2.29h8.21v2.27h-2.81v7.1h-2.6z\" />\n                  <path\n                    d=\"m29.13 43.08h4.42a3.53 3.53 0 0 1 2.55.83 2.09 2.09 0 0 1 .6 1.53 2.16 2.16 0 0 1 -1.44 2.09 2.27 2.27 0 0 1 1.86 2.29c0 1.61-1.31 2.59-3.55 2.59h-4.44zm5 2.89c0-.52-.42-.8-1.18-.8h-1.29v1.64h1.24c.79 0 1.25-.26 1.25-.81zm-.9 2.66h-1.57v1.73h1.62c.8 0 1.24-.31 1.24-.86 0-.5-.4-.87-1.27-.87z\"\n                  />\n                  <path\n                    d=\"m38 43.08h4.1a4.19 4.19 0 0 1 3 1 2.93 2.93 0 0 1 .9 2.19 3 3 0 0 1 -1.93 2.89l2.24 3.27h-3l-1.88-2.84h-.87v2.84h-2.56zm4 4.5c.87 0 1.39-.43 1.39-1.11 0-.75-.54-1.12-1.4-1.12h-1.44v2.26z\"\n                  />\n                  <path\n                    d=\"m49.59 43h2.5l4 9.44h-2.79l-.67-1.69h-3.63l-.67 1.69h-2.71zm2.27 5.73-1-2.65-1.06 2.65z\"\n                  />\n                  <path d=\"m56.46 43.05h2.6v9.37h-2.6z\" />\n                  <path d=\"m60.06 43.05h2.42l3.37 5v-5h2.57v9.37h-2.26l-3.53-5.14v5.14h-2.57z\" />\n                  <path\n                    d=\"m68.86 51 1.45-1.73a4.84 4.84 0 0 0 3 1.13c.71 0 1.08-.24 1.08-.65 0-.4-.31-.6-1.59-.91-2-.46-3.53-1-3.53-2.93 0-1.74 1.37-3 3.62-3a5.89 5.89 0 0 1 3.86 1.25l-1.26 1.84a4.63 4.63 0 0 0 -2.62-.92c-.63 0-.94.25-.94.6 0 .42.32.61 1.63.91 2.14.46 3.44 1.16 3.44 2.91 0 1.91-1.51 3-3.79 3a6.58 6.58 0 0 1 -4.35-1.5z\"\n                  />\n                </g>\n              </svg>\n              <span>\n                Install Nx Console for JetBrains\n                <span>Available for WebStorm, Intellij IDEA Ultimate and more!</span>\n              </span>\n            </a>\n            <div id=\"nx-cloud\" class=\"rounded shadow\">\n              <div>\n                <svg\n                  id=\"nx-cloud-logo\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  stroke=\"currentColor\"\n                  fill=\"transparent\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    stroke-width=\"2\"\n                    d=\"M23 3.75V6.5c-3.036 0-5.5 2.464-5.5 5.5s-2.464 5.5-5.5 5.5-5.5 2.464-5.5 5.5H3.75C2.232 23 1 21.768 1 20.25V3.75C1 2.232 2.232 1 3.75 1h16.5C21.768 1 23 2.232 23 3.75Z\"\n                  />\n                  <path\n                    stroke-width=\"2\"\n                    d=\"M23 6v14.1667C23 21.7307 21.7307 23 20.1667 23H6c0-3.128 2.53867-5.6667 5.6667-5.6667 3.128 0 5.6666-2.5386 5.6666-5.6666C17.3333 8.53867 19.872 6 23 6Z\"\n                  />\n                </svg>\n                <h2>\n                  Nx Cloud\n                  <span> Enable faster CI & better DX </span>\n                </h2>\n              </div>\n              <p>You can activate distributed tasks executions and caching by running:</p>\n              <pre>nx connect</pre>\n              <a\n                href=\"https://nx.dev/nx-cloud?utm_source=nx-project\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                What is Nx Cloud?\n              </a>\n            </div>\n          </div>\n        </div>\n        <!--  COMMANDS  -->\n        <div id=\"commands\" class=\"rounded shadow\">\n          <h2>Next steps</h2>\n          <p>Here are some things you can do with Nx:</p>\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              Build, test and lint your app\n            </summary>\n            <pre><span># Build</span>\nnx build \n<span># Test</span>\nnx test \n<span># Lint</span>\nnx lint \n<span># Run them together!</span>\nnx run-many -t build test lint</pre>\n          </details>\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              View project details\n            </summary>\n            <pre>nx show project todolist</pre>\n          </details>\n\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              View interactive project graph\n            </summary>\n            <pre>nx graph</pre>\n          </details>\n\n          <details>\n            <summary>\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              Add UI library\n            </summary>\n            <pre><span># Generate UI lib</span>\nnx g &#64;nx/angular:lib ui\n<span># Add a component</span>\nnx g &#64;nx/angular:component ui/src/lib/button</pre>\n          </details>\n        </div>\n        <p id=\"love\">\n          Carefully crafted with\n          <svg\n            fill=\"currentColor\"\n            stroke=\"none\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n            />\n          </svg>\n        </p>\n      </div>\n    </div>\n  `,\n  styles: [],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NxWelcomeComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "NxWelcomeComponent-1"
        },
        {
            "name": "TaskComponentComponent",
            "id": "component-TaskComponentComponent-4f534bffc2a5d6c8ef63de3af8132d5bcf3e3b4374ded09a7d6cce69c413601077fb91853d43f9082f516066575be61462fdcfbe94977f2a7a3ea39ecedf896d",
            "file": "libs/lib-todolist/src/features/task-component/task-component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-task-component",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./task-component.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "task",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "updateTask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "isEditing",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "selected",
                    "defaultValue": "computed(() => this.store.selectedIds().includes(this.task().id))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "store",
                    "defaultValue": "inject(TodolistSignalStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "task",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ],
                    "required": true
                },
                {
                    "name": "updateTask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "enableEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteTask",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onUpdateTask",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectChanged",
                    "args": [
                        {
                            "name": "isSelected",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "isSelected",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "WebButtonComponent",
                    "type": "component"
                },
                {
                    "name": "CheckboxComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, inject, input, output, signal } from '@angular/core';\nimport { CheckboxComponent, WebButtonComponent } from 'web/uis';\nimport { TaskEntity, TodolistSignalStore } from '../../stores';\n@Component({\n  selector: 'lib-task-component',\n  standalone: true,\n  imports: [CommonModule, WebButtonComponent, CheckboxComponent],\n  templateUrl: './task-component.component.html',\n})\nexport class TaskComponentComponent {\n  public updateTask = output<TaskEntity>();\n  public task = input.required<TaskEntity>();\n  public isEditing = signal(false);\n  protected store = inject(TodolistSignalStore);\n  protected selected = computed(() => this.store.selectedIds().includes(this.task().id));\n  onUpdateTask() {\n    this.updateTask.emit(this.task());\n  }\n  public onDeleteTask() {\n    this.store.deleteTodo(this.task());\n  }\n\n  enableEdit() {\n    this.isEditing.set(true)\n  }\n\n  saveEdit() {\n    this.isEditing.set(false)\n    this.updateTask.emit(this.task()); // Emit the updated task back to the parent\n  }\n\n  public selectChanged(isSelected: boolean) {\n    if (isSelected) {\n      this.store.addSelected(this.task().id);\n      return;\n    }\n    this.store.removeSelected(this.task().id);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<article class=\"mb-2 flex items-center justify-between rounded-md bg-gray-100 px-4 py-2\">\n  <section class=\"flex w-full items-center justify-between\">\n    <!-- Task Select Checkbox -->\n    <uis-checkbox\n      [uniqId]=\"task().id\"\n      [checked]=\"selected()\"\n      (checkedChange)=\"selectChanged($event)\"\n    ></uis-checkbox>\n\n    <!-- Task Name -->\n    @if (isEditing()) {\n      <input\n        *ngIf=\"isEditing()\"\n        type=\"text\"\n        [(value)]=\"task().name\"\n        (blur)=\"saveEdit()\"\n        (keyup.enter)=\"saveEdit()\"\n        class=\"w-40 rounded-md border border-gray-300 px-2 py-1 text-gray-700\"\n        aria-label=\"Edit task name\"\n      />\n    } @else {\n      <div\n        class=\"ml-3 w-40 cursor-pointer font-medium\"\n        [class.line-through]=\"task().completed\"\n        [class.text-gray-700]=\"!task().completed\"\n        [class.text-gray-500]=\"task().completed\"\n        (dblclick)=\"enableEdit()\"\n      >\n        {{ task().name }}\n      </div>\n    }\n\n    <!-- Task Timestamp -->\n    <time class=\"ml-2 text-gray-400\" [attr.datetime]=\"task().ts\">\n      {{ task().ts | date: 'short' }}\n    </time>\n\n    <!-- Delete Button -->\n    <uis-web-button\n      class=\"ml-3\"\n      [buttonName]=\"'Delete'\"\n      (click)=\"onDeleteTask()\"\n      aria-label=\"Delete task\"\n    />\n  </section>\n</article>\n"
        },
        {
            "name": "TodolistComponent",
            "id": "component-TodolistComponent-d5c4691f2dfb57109f208a26013d4fd315970f171027f54854ad40e01f7f828ef8b3d761855333a969cbe49b6f47febb0021432817dd7252992853dd61d43025",
            "file": "libs/lib-todolist/src/features/todolist/todolist.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "TodolistSignalStore"
                }
            ],
            "selector": "todolist",
            "styleUrls": [],
            "styles": [],
            "template": "<section class=\"mx-auto mt-10 max-w-lg rounded-md bg-white p-4 shadow-md\">  <header class=\"mb-4 text-2xl font-bold text-gray-700\">Todo List</header>\n\n  <!-- Add Task Section -->\n  <section class=\"mb-4 flex items-center gap-2\">\n    <input\n      #addTaskInput\n      [(ngModel)]=\"taskModel\"\n      type=\"text\"\n      placeholder=\"Add a new task\"\n      class=\"flex-1 rounded-md border border-gray-300 px-4 py-2 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n      (keydown.enter)=\"test(addTaskInput)\"\n    />\n    <uis-web-button [buttonName]=\"'Add Task'\" (click)=\"addTaskHandler()\"></uis-web-button>\n  </section>\n\n  <!-- Task List Section -->\n  <section>\n    @if (store.todoLists().length > 0) {\n      <div class=\"space-y-2\">\n        @for (task of store.todoLists(); track $index) {\n          <lib-task-component [task]=\"task\"></lib-task-component>\n        }\n      </div>\n    } @else {\n      <p class=\"text-center text-gray-500\">No tasks available. Add your first task!</p>\n    }\n  </section>\n\n  <lib-todolist-footer\n    [showCompletedArea]=\"!!store.selectedIds().length\"\n    (completeTodos)=\"completeHandler($event)\"\n  ></lib-todolist-footer>\n</section>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "store",
                    "defaultValue": "inject(TodolistSignalStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "taskModel",
                    "defaultValue": "model<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addTaskHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "completeHandler",
                    "args": [
                        {
                            "name": "completed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "completed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "test",
                    "args": [
                        {
                            "name": "inputElem",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "inputElem",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "TaskComponentComponent",
                    "type": "component"
                },
                {
                    "name": "WebButtonComponent",
                    "type": "component"
                },
                {
                    "name": "TodolistFooterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, inject, model } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport * as uuid from 'uuid';\nimport { WebButtonComponent } from 'web/uis';\nimport { TodolistSignalStore } from '../../stores';\nimport { TodolistFooterComponent } from '../../uis/todolist-footer/todolist-footer.component';\nimport { TaskComponentComponent } from '../task-component/task-component.component';\n\n\n@Component({\n  selector: 'todolist',\n  standalone: true,\n  imports: [CommonModule, FormsModule, TaskComponentComponent, WebButtonComponent, TodolistFooterComponent],\n  providers: [TodolistSignalStore],\n  template: `<section class=\"mx-auto mt-10 max-w-lg rounded-md bg-white p-4 shadow-md\">\n  <header class=\"mb-4 text-2xl font-bold text-gray-700\">Todo List</header>\n\n  <!-- Add Task Section -->\n  <section class=\"mb-4 flex items-center gap-2\">\n    <input\n      #addTaskInput\n      [(ngModel)]=\"taskModel\"\n      type=\"text\"\n      placeholder=\"Add a new task\"\n      class=\"flex-1 rounded-md border border-gray-300 px-4 py-2 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n      (keydown.enter)=\"test(addTaskInput)\"\n    />\n    <uis-web-button [buttonName]=\"'Add Task'\" (click)=\"addTaskHandler()\"></uis-web-button>\n  </section>\n\n  <!-- Task List Section -->\n  <section>\n    @if (store.todoLists().length > 0) {\n      <div class=\"space-y-2\">\n        @for (task of store.todoLists(); track $index) {\n          <lib-task-component [task]=\"task\"></lib-task-component>\n        }\n      </div>\n    } @else {\n      <p class=\"text-center text-gray-500\">No tasks available. Add your first task!</p>\n    }\n  </section>\n\n  <lib-todolist-footer\n    [showCompletedArea]=\"!!store.selectedIds().length\"\n    (completeTodos)=\"completeHandler($event)\"\n  ></lib-todolist-footer>\n</section>\n`,\n})\nexport class TodolistComponent {\n  protected store = inject(TodolistSignalStore);\n  protected taskModel = model<string>('');\n\n\n  // Method 1: 不需要Model, pass Input from template\n  protected test(inputElem: HTMLInputElement): void {\n    if (inputElem.value.length === 0 || inputElem.value.trim() === '') {\n      return;\n    }\n    this.store.addTodo({\n      id: uuid.v4(),\n      name: inputElem.value,\n      completed: false,\n      ts: new Date().getTime().toString()\n    });\n    inputElem.value = '';\n    this.taskModel.set('');\n  }\n\n  // Method 2: 使用Model, 透過Model取得資料\n  // 可以註冊 taskModel 的監聽事件, angular 會自動註銷\n  // this.taskModel.subscribe((value) => {\n  //  console.log('TaskModel', value);\n  // })\n  protected addTaskHandler(): void {\n    if (this.taskModel().length === 0 || this.taskModel().trim() === '') {\n      return;\n    }\n    this.store.addTodo({\n      id: uuid.v4(),\n      name: this.taskModel(),\n      completed: false,\n      ts: new Date().getTime().toString()\n    });\n    this.taskModel.set('');\n  }\n\n\n  protected completeHandler(completed: boolean): void {\n    this.store.completeAllTodos(completed);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "TodolistFooterComponent",
            "id": "component-TodolistFooterComponent-dbe835d22bf7fe6e6e96647f9994a351a0458d5b99d217f57cee49043ace14c5a27c39cc509d65990a462c380c62c453bb749b409ed1c23feb9f96db8d1475c6",
            "file": "libs/lib-todolist/src/uis/todolist-footer/todolist-footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-todolist-footer",
            "styleUrls": [],
            "styles": [],
            "template": "<footer class=\"mt-4 flex justify-between text-sm\">  <uis-web-button\n    [btnClasses]=\"'bg-gray-500 hover:bg-gray-600'\"\n    [buttonName]=\"'Select All'\"\n  ></uis-web-button>\n\n  @if (this.showCompletedArea()) {\n    <div class=\"flex gap-2\">\n      <uis-web-border-button\n        [btnClasses]=\"'border-green-500 text-green-500 hover:bg-green-100 hover:text-green-600'\"\n        [buttonName]=\"'Complete'\"\n        (click)=\"completeAllTodos()\"\n      ></uis-web-border-button>\n      <uis-web-border-button\n        [btnClasses]=\"'hover:bg-gray-100 hover:text-gray-600'\"\n        [buttonName]=\"'Incomplete'\"\n        (click)=\"incompleteAllTodos()\"\n      ></uis-web-border-button>\n    </div>\n  }\n</footer>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "showCompletedArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "completeTodos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "completeTodos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "showCompletedArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125
                    ],
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "completeAllTodos",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "incompleteAllTodos",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "WebBorderButtonComponent",
                    "type": "component"
                },
                {
                    "name": "WebButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WebBorderButtonComponent, WebButtonComponent } from 'web/uis';\n\n@Component({\n  selector: 'lib-todolist-footer',\n  standalone: true,\n  imports: [CommonModule, WebBorderButtonComponent, WebButtonComponent],\n  template: `<footer class=\"mt-4 flex justify-between text-sm\">\n  <uis-web-button\n    [btnClasses]=\"'bg-gray-500 hover:bg-gray-600'\"\n    [buttonName]=\"'Select All'\"\n  ></uis-web-button>\n\n  @if (this.showCompletedArea()) {\n    <div class=\"flex gap-2\">\n      <uis-web-border-button\n        [btnClasses]=\"'border-green-500 text-green-500 hover:bg-green-100 hover:text-green-600'\"\n        [buttonName]=\"'Complete'\"\n        (click)=\"completeAllTodos()\"\n      ></uis-web-border-button>\n      <uis-web-border-button\n        [btnClasses]=\"'hover:bg-gray-100 hover:text-gray-600'\"\n        [buttonName]=\"'Incomplete'\"\n        (click)=\"incompleteAllTodos()\"\n      ></uis-web-border-button>\n    </div>\n  }\n</footer>\n`\n})\nexport class TodolistFooterComponent {\n  public completeTodos = output<boolean>();\n  public showCompletedArea = input.required<boolean>();\n\n  public completeAllTodos(): void {\n    this.completeTodos.emit(true);\n  }\n\n  public incompleteAllTodos(): void {\n    this.completeTodos.emit(false);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "WebBorderButtonComponent",
            "id": "component-WebBorderButtonComponent-8957f4a73d3daee478c04920f7c163af7e8fab4d78781fb94803742fd6d0840a14ffb3b3be7c9ae42cdf440c3e3c44f8a4ccdabd1bac3f81ecbb42c65dee5661",
            "file": "libs/web/uis/src/lib/buttons/web-border-button/web-border-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "uis-web-border-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  [class.fontBold]=\"isFontBold()\"\n  [disabled]=\"isDisabled()\"\n  class=\"{{ defaultButtonClass }} {{ btnClasses() }}\"\n  >\n  {{ buttonName() }}\n  </button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "btnClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false,
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                },
                {
                    "name": "buttonName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": true,
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false,
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                },
                {
                    "name": "isFontBold",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false,
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false,
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                },
                {
                    "name": "buttonName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": true,
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "input<Color>('blue')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                },
                {
                    "name": "colorStyle",
                    "defaultValue": "computed(() => colorTransform(this.color()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false,
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                },
                {
                    "name": "isFontBold",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false,
                    "inheritance": {
                        "file": "WebButtonComponent"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WebButtonComponent } from '../web-button/web-button.component';\nimport { DEFAULT_BORDER_BUTTON_CLASSES } from '../../styles';\n\n@Component({\n  selector: 'uis-web-border-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <button\n      [class.fontBold]=\"isFontBold()\"\n      [disabled]=\"isDisabled()\"\n      class=\"{{ defaultButtonClass }} {{ btnClasses() }}\"\n      >\n      {{ buttonName() }}\n      </button>\n  `\n})\nexport class WebBorderButtonComponent extends WebButtonComponent {\n  protected override get defaultButtonClass(): string {\n    return DEFAULT_BORDER_BUTTON_CLASSES;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "WebButtonComponent"
            ],
            "accessors": {
                "defaultButtonClass": {
                    "name": "defaultButtonClass",
                    "getSignature": {
                        "name": "defaultButtonClass",
                        "type": "string",
                        "returnType": "string",
                        "line": 21
                    }
                }
            }
        },
        {
            "name": "WebButtonComponent",
            "id": "component-WebButtonComponent-320ed2806a3e619b8cddcbf8efebd000da5cd090d4dfea0e1b256b235e453f1d34c3e3e265d0ab9ec730b7b19afc117d6c04c8c6102c58c3344707617f213680",
            "file": "libs/web/uis/src/lib/buttons/web-button/web-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "uis-web-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  class=\"shared-button-outlook {{ defaultButtonClass }} {{ colorStyle().bg }} {{colorStyle().hoverBg}} {{ btnClasses() }} \"\n  [class.fontBold]=\"isFontBold()\"\n  [disabled]=\"isDisabled()\"\n>\n  {{ buttonName() }}\n</button>\n\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "btnClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "buttonName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": true
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "isFontBold",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "buttonName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": true
                },
                {
                    "name": "color",
                    "defaultValue": "input<Color>('blue')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "colorStyle",
                    "defaultValue": "computed(() => colorTransform(this.color()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "isFontBold",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClassType } from 'shared';\nimport { Color, DEFAULT_BUTTON_CLASSES } from '../../styles';\nimport { colorTransform } from '../../utils';\n@Component({\n  selector: 'uis-web-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <button\n      class=\"shared-button-outlook {{ defaultButtonClass }} {{ colorStyle().bg }} {{colorStyle().hoverBg}} {{ btnClasses() }} \"\n      [class.fontBold]=\"isFontBold()\"\n      [disabled]=\"isDisabled()\"\n    >\n      {{ buttonName() }}\n    </button>\n\n  `\n})\nexport class WebButtonComponent {\n  buttonName = input.required<string>();\n  btnClasses = input<ClassType>();\n  isFontBold = input<boolean>(false);\n  isDisabled = input<boolean>(false);\n  color = input<Color>('blue');\n  // FIXME: This is a bug, the colorStyle should be a computed property, the tailwind remove the color\n  protected colorStyle = computed(() => colorTransform(this.color()));\n\n  protected get defaultButtonClass(): string {\n    return DEFAULT_BUTTON_CLASSES;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "defaultButtonClass": {
                    "name": "defaultButtonClass",
                    "getSignature": {
                        "name": "defaultButtonClass",
                        "type": "string",
                        "returnType": "string",
                        "line": 30
                    }
                }
            }
        },
        {
            "name": "WebFeatureMockComponent",
            "id": "component-WebFeatureMockComponent-97755459beaeb76a6cbe786709a49a97fd7828cd7fb4bd2cc2185bdb5838f7e88ebd63ad98bfb74d017aef421ec78a2da400e16580ed2612ec5e508c3c7e8f35",
            "file": "libs/web/features/dialog/src/lib/web-features-mock/web-features-mock.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "web-features-mock",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"mock\">\n  <p>mock works!</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogComponentConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_COMPONENT_PROVIDER"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DecorateOverlayRef, DIALOG_COMPONENT_PROVIDER, DialogComponentConfig } from 'web/features/dialog';\n\n@Component({\n  selector: 'web-features-mock',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"mock\">\n      <p>mock works!</p>\n    </div>\n  `,\n  styles: [],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class WebFeatureMockComponent {\n  constructor(\n    private ref: DecorateOverlayRef,\n    @Inject(DIALOG_COMPONENT_PROVIDER) public config: DialogComponentConfig) {\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "DecorateOverlayRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "DialogComponentConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "DecorateOverlayRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "DialogComponentConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "WebFeatureMockNoInjectorComponent",
            "id": "component-WebFeatureMockNoInjectorComponent-0241d0399fd556bb2507bb8d441ae0ba08d10c6086f3087ff10584c379fae574beb726c0e79c06d86d9094669f9b4b7ce4cb7efdd41394b012e0449c4579aefb",
            "file": "libs/web/features/dialog/src/lib/web-features-mock/web-features-mock-no-injector.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "web-features-mock-no-injector",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-full h-[100px] flex items-center justify-center\">\n  <p>WebFeatureMockNoInjectorComponent!</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'web-features-mock-no-injector',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"w-full h-[100px] flex items-center justify-center\">\n      <p>WebFeatureMockNoInjectorComponent!</p>\n    </div>\n  `,\n  styles: [],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class WebFeatureMockNoInjectorComponent {\n  constructor() {\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "extends": []
        },
        {
            "name": "WebFeaturesDialogComponent",
            "id": "component-WebFeaturesDialogComponent-6da38216bbf5d22b909a40ca85b891fcf956e81c3b2db45d29ed08ca55eab184ba68d4816a8b712e23a305b830fc775219ba0629536592d49d71f1e9b5f87769",
            "file": "libs/web/features/dialog/src/lib/web-features-dialog/web-features-dialog.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "web-features-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./web-features-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DefaultDialogConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DIALOG_DEFAULT_PROVIDER"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "viewContainerRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'content', {read: ViewContainerRef}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sendEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "DialogEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DialogEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { AfterViewInit, ChangeDetectionStrategy, Component, Inject, ViewChild, ViewContainerRef } from '@angular/core';\nimport { DefaultDialogConfig, DialogEvent } from '../models';\nimport { DIALOG_DEFAULT_PROVIDER } from '../providers';\nimport { DecorateOverlayRef } from '../utils';\n\n@Component({\n  selector: 'web-features-dialog',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './web-features-dialog.component.html',\n  styleUrl: './web-features-dialog.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WebFeaturesDialogComponent implements AfterViewInit {\n  @ViewChild('content', { read: ViewContainerRef }) viewContainerRef!: ViewContainerRef;\n\n  constructor(\n    private ref: DecorateOverlayRef,\n    @Inject(DIALOG_DEFAULT_PROVIDER) public config: DefaultDialogConfig) { }\n\n\n  public get dialogEvent(): typeof DialogEvent {\n    return DialogEvent;\n  }\n\n  public ngAfterViewInit() {\n    if (this.config.contentComponent) {\n      this.viewContainerRef.createComponent(this.config.contentComponent());\n    };\n  }\n\n  public sendEvent(event: DialogEvent) {\n    this.ref.sendEvent(event);\n  }\n\n}\n",
            "styleUrl": "./web-features-dialog.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "DecorateOverlayRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "DefaultDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "DecorateOverlayRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "DefaultDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "dialogEvent": {
                    "name": "dialogEvent",
                    "getSignature": {
                        "name": "dialogEvent",
                        "type": "",
                        "returnType": "",
                        "line": 23
                    }
                }
            },
            "templateData": "<div class=\"flex h-64 w-96 flex-col items-center justify-center rounded-md bg-white p-4 shadow-lg\">\n  <span class=\"mb-4 h-4 w-full text-center text-lg font-medium text-gray-600\">{{\n    config.title\n  }}</span>\n\n  <!-- text section-->\n  @if (config.content) {\n    <section class=\"w-full h-full text-sm {{ config.contentClasses }}\">\n      {{ config.content }}\n    </section>\n  }\n\n  @if (config.contentComponent) {\n    <!-- dynamic component section: createComponent() adds component to the same level as the #content host element in the DOM,  -->\n    <section #content *ngIf=\"config.contentComponent\"></section>\n  }\n\n  <!-- button section-->\n  <section class=\"flex items-center justify-center gap-4 p-2\">\n    @for (btn of config.btns; track btn.type; let index = $index) {\n      <button (click)=\"sendEvent(btn.type)\" class=\"{{ btn.classes }}\">\n        {{ btn.displayName }}\n      </button>\n    }\n  </section>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "MyEntityStoreModule",
            "id": "module-MyEntityStoreModule-a7a43ad8959ffcc223a5afc828e6974be1e4ac2cf91dcbf8130d6d474ea23762cb57fa140eedc0ae2d159743fed2380677ceea89a1626135fc0526b3b18501db",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/stores/todolist-store/src/lib/todolist.store.module.ts",
            "methods": [],
            "sourceCode": "\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { todolistEntityReducer } from './states/todolist.entity.reducer';\nimport { TODOLIST_FEATURE_NAME } from './states/todolist.entity.selector';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature(TODOLIST_FEATURE_NAME, todolistEntityReducer),\n  ],\n})\nexport class MyEntityStoreModule { }\n\n\n// options2: using standalone component\n/*\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideStore({ myEntity: myEntityReducer }),\n  ],\n});\n*/\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "addTodolistEntity",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  `${PREFIX} Add TodolistEntity`,\n  props<{ entity: TaskEntity }>()\n)"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/skeleton/src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(appRoutes)],\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/todolist/src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideStoreDevtools({\n      maxAge: 25,\n      logOnly: !devMode,\n      connectInZone: true\n    }),\n    //provideZoneChangeDetection({ eventCoalescing: true }),\n    provideExperimentalZonelessChangeDetection(),\n    provideRouter(appRoutes),\n    provideStore({ todolistEntity: todolistEntityReducer }),\n  ],\n}"
            },
            {
                "name": "appRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/skeleton/src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[]"
            },
            {
                "name": "appRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/todolist/src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[]"
            },
            {
                "name": "COLORS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/uis/src/lib/styles/color.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "['blue', 'gray', 'green', 'red', 'yellow', 'purple', 'pink', 'indigo', 'white', 'black'] as const"
            },
            {
                "name": "ColorStyleMapper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/uis/src/lib/utils/color.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ColorStyleMapperType",
                "defaultValue": "COLORS.reduce((acc, key) => {\n  acc[key as Color] = {\n    borderColor: `border-${key}-500`,\n    bg: `bg-${key}-500`,\n    hoverBg: `hover:bg-${key}-700`,\n    hoverBorder: `hover:border-${key}-500`,\n  };\n  return acc;\n}, {} as ColorStyleMapperType)"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Danger Button',\n    variant: 'danger',\n  },\n}"
            },
            {
                "name": "DEFAULT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/uis/src/lib/styles/default-style.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"rounded-md min-w-16 min-h-8 px-3 py-2 text-sm \""
            },
            {
                "name": "DEFAULT_BORDER_BUTTON_CLASSES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/uis/src/lib/styles/default-style.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`${DEFAULT} border border-gray-500 text-gray-500 hover:bg-gray-100 hover:text-gray-600`"
            },
            {
                "name": "DEFAULT_BUTTON_CLASSES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/uis/src/lib/styles/default-style.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`${DEFAULT} bg-blue-500 text-white hover:bg-blue-700`"
            },
            {
                "name": "DEFAULT_CHECKBOX_CLASSES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/uis/src/lib/styles/default-style.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"flex h-6 w-6 cursor-pointer items-center justify-center rounded-md border border-gray-500 text-white transition-all duration-200 ease-in-out peer-checked:border-gray-500 peer-checked:bg-black-200\""
            },
            {
                "name": "DEFAULT_OVERLAY_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/features/dialog/src/lib/default-configs/overlay-config.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "OverlayConfig",
                "defaultValue": "{\n  hasBackdrop: true,\n  backdropClass: ['bg-gray-500/30'],\n  panelClass: [],\n}"
            },
            {
                "name": "deleteEntity",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  `${PREFIX} Delete TodolistEntity`,\n  props<{ id: string }>()\n)"
            },
            {
                "name": "devMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/todolist/src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "true"
            },
            {
                "name": "DIALOG_COMPONENT_PROVIDER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/features/dialog/src/lib/providers/dialog.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<DialogComponentConfig>('DIALOG_COMPONENT_PROVIDER')"
            },
            {
                "name": "DIALOG_DEFAULT_PROVIDER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/features/dialog/src/lib/providers/dialog.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<DefaultDialogConfig>('DIALOG_DEFAULT_PROVIDER')"
            },
            {
                "name": "getGreeting",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/skeleton-e2e/src/support/app.po.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => cy.get('h1')"
            },
            {
                "name": "getGreeting",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/todolist-e2e/src/support/app.po.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => cy.get('h1')"
            },
            {
                "name": "hmrBootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/settings/hmr/src/lib/hmr.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(module: any, bootstrap: () => Promise<NgModuleRef<any>>) => {\n  let ngModule: NgModuleRef<any>;\n  module.hot.accept();\n  bootstrap().then((mod) => (ngModule = mod));\n  module.hot.dispose(() => {\n    const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n    const elements = appRef.components.map((c) => c.location.nativeElement);\n    const makeVisible = createNewHosts(elements);\n    ngModule.destroy();\n    makeVisible();\n  });\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/lib-todolist/src/stores/signal-store/todolist.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TodolistState",
                "defaultValue": "{\n  selectedIds: [],\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TodolistEntityState",
                "defaultValue": "{\n  ids: [],\n  entities: {},\n  selected: []\n}"
            },
            {
                "name": "loadTodolistEntities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${PREFIX} Load TodolistEntities`)"
            },
            {
                "name": "loadTodolistEntitiesFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  `${PREFIX} Load TodolistEntities Failure`,\n  props<{ error: unknown }>()\n)"
            },
            {
                "name": "loadTodolistEntitiesSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  `${PREFIX} Load TodolistEntities Success`,\n  props<{ entities: TaskEntity[] }>()\n)"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CoreButtonComponent>",
                "defaultValue": "{\n  title: 'CoreButton',\n  component: CoreButtonComponent,\n  decorators: [\n    applicationConfig({\n      providers: [\n        importProvidersFrom(CommonModule),\n        provideAnimations(),\n      ],\n    }),\n  ],\n  argTypes: {\n    label: { control: 'text' },\n    variant: { control: 'select', options: ['primary', 'secondary', 'danger'] },\n  },\n}"
            },
            {
                "name": "MOCK_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/features/dialog/src/lib/mocks/mock-config.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DefaultDialogConfig",
                "defaultValue": "{\n  injectorID: 'a1',\n  title: 'Dialog Default Title',\n  // content: 'Dialog Content',\n  contentClasses: ['bg-gray-200'],\n  contentComponent: () => WebFeatureMockNoInjectorComponent,\n  btns: [\n    {\n      type: DialogEvent.Enter,\n      displayName: 'Enter',\n      classes: ['outline-none', 'text-base', 'border', 'px-2', 'py-1', 'rounded-md', 'border-red-400', 'bg-pink-200', 'transition-colors', 'hover:bg-pink-300']\n    },\n    {\n      type: DialogEvent.Cancel,\n      displayName: 'Close',\n      classes: ['outline-none', 'text-base', 'border', 'px-2', 'py-1', 'rounded-md', 'border-blue-400', 'bg-blue-200', 'transition-colors', 'hover:bg-blue-300']\n    }\n  ],\n  overlayConfig: DEFAULT_OVERLAY_CONFIG,\n}"
            },
            {
                "name": "MOCK_CONFIG2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/web/features/dialog/src/lib/mocks/mock-config.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DialogComponentConfig",
                "defaultValue": "{\n  injectorID: 'a2',\n  componentRef: () => WebFeatureMockComponent,\n  overlayConfig: DEFAULT_OVERLAY_CONFIG,\n  data: {\n    test: 'hello world'\n  }\n}"
            },
            {
                "name": "PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[TodolistEntity]'"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Primary Button',\n    variant: 'primary',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Secondary Button',\n    variant: 'secondary',\n  },\n}"
            },
            {
                "name": "selectTodolistState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<TodolistEntityState>(TODOLIST_FEATURE_NAME)"
            },
            {
                "name": "TODOLIST_FEATURE_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'todolistEntity'"
            },
            {
                "name": "todolistEntityAdapter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.adaptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EntityAdapter<TaskEntity>",
                "defaultValue": "createEntityAdapter<TaskEntity>({\n    selectId: (task: TaskEntity) => task.id,\n    sortComparer: (a: TaskEntity, b: TaskEntity) => a.name.localeCompare(b.name)\n  })"
            },
            {
                "name": "todolistEntityReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(loadTodolistEntitiesSuccess, (state, { entities }) => todolistEntityAdapter.setAll(entities, state)),\n  on(addTodolistEntity, (state, { entity }) => todolistEntityAdapter.addOne(entity, state)),\n  on(updateTodolistEntity, (state, { entity }) => todolistEntityAdapter.updateOne({ id: entity.id, changes: entity }, state)),\n  on(deleteEntity, (state, { id }) => todolistEntityAdapter.removeOne(id, state)),\n)"
            },
            {
                "name": "TodolistSignalStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/lib-todolist/src/stores/signal-store/todolist.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "signalStore(\n  // withDevtools is a helper function that adds the devtools to the store\n  withDevtools('todolistLocal', withGlitchTracking()),\n  withState(initialState),\n  // withUndoRedo(),\n  // withCallState is a helper function that adds a call state to the store\n  // withCallState(),\n  withEntities<TaskEntity>(),\n\n  withComputed((store) => ({\n    todoLists: computed(() => store.entities())\n  })),\n  withMethods(\n    (store) => ({\n      // fetchAllTask: () => resource<TaskEntity[], void>({\n      //   loader: () => {\n      //     const url = 'http://localhost:3000/tasks';\n      //     return fetch(url).then((response) => {\n      //       if (!response.ok) {\n      //         throw Error('error');\n      //       }\n      //       return response.json();\n      //     });\n      //   }\n      // }),\n      fetchAllTask: async () => {\n        const url = 'http://localhost:3000/tasks';\n        const data = await fetch(url);\n        if (!data.ok) {\n          throw Error('error');\n        }\n        return await data.json() as TaskEntity[];\n      },\n\n      // addEntity: Adds an entity to the collection.\n      // If the entity collection has an entity with the same ID, it is not overridden and no error is thrown.\n      addTodo(todo: TaskEntity): void {\n        patchState(store, addEntity(todo));\n      },\n\n      addTodos(todos: TaskEntity[]): void {\n        // updateState is a wrapper around patchState and has an action name as second parameter\n        updateState(store, 'AddTodos', addEntities(todos));\n      },\n\n      // setEntity: Adds or replaces an entity in the collection.\n      Todo(todo: TaskEntity): void {\n        patchState(store, setEntity(todo));\n      },\n\n      setTodos(todos: TaskEntity[]): void {\n        patchState(store, setEntities(todos));\n      },\n\n      updateTodoName(updateTodo: TaskEntity): void {\n        patchState(store, updateEntity({\n          id: updateTodo.id,\n          changes: (todo) => ({ ...todo, name: updateTodo.name })\n        }));\n      },\n\n      deleteTodo(todo: TaskEntity): void {\n        // patchState(store, removeEntity(todo.id));\n        patchState(store, (state) => {\n          return {\n            ...removeEntity(todo.id)(state),\n            selectedIds: state.selectedIds.filter((selectedId) => selectedId !== todo.id),\n          };\n        });\n      },\n\n      // remove all todos that are empty\n      removeEmptyTodos(): void {\n        patchState(store, removeEntities(({ name }) => !name));\n      },\n\n      // complete all todos\n      completeAllTodos(completed: boolean): void {\n        patchState(store, updateEntities({\n          ids: store.selectedIds(),\n          changes: { completed }\n        }));\n      },\n\n      addSelected(id: string): void {\n        patchState(store, {\n          selectedIds: [...store.selectedIds(), id]\n        });\n      },\n      removeSelected(id: string): void {\n        patchState(store, {\n          selectedIds: [...store.selectedIds().filter((selectedId) => selectedId !== id)]\n        });\n      },\n\n    }),\n\n  ),\n  withHooks({\n    onInit(store) {\n      store.fetchAllTask().then(tasks => {\n        store.addTodos(tasks);\n      }).catch(error => {\n        console.error('Failed to fetch tasks:', error);\n      });\n    }\n  }),\n)"
            },
            {
                "name": "updateTodolistEntity",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  `${PREFIX} Update TodolistEntity`,\n  props<{ entity: TaskEntity }>()\n)"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "todolistEntityAdapter.getSelectors(selectTodolistState)"
            }
        ],
        "functions": [
            {
                "name": "colorTransform",
                "file": "libs/web/uis/src/lib/utils/color.util.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "color",
                        "type": "Color",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ColorStyle",
                "jsdoctags": [
                    {
                        "name": "color",
                        "type": "Color",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createRefBuilder",
                "file": "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Creates a reference builder function that can be used to create overlay references with a specified configuration and position strategy.</p>\n",
                "args": [
                    {
                        "name": "builder",
                        "type": "OverlayPositionBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "DecorateRefBuilder",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 922,
                            "end": 929,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "builder"
                        },
                        "type": "OverlayPositionBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 916,
                            "end": 921,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The <code>OverlayPositionBuilder</code> instance used to generate position strategies.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 1018,
                            "end": 1025,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "overlay"
                        },
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1012,
                            "end": 1017,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The <code>Overlay</code> instance used to create overlay references.</li>\n</ul>\n"
                    },
                    {
                        "tagName": {
                            "pos": 1090,
                            "end": 1097,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "returns"
                        },
                        "comment": "<p>A function that takes an overlay configuration and an optional position strategy, and returns an object containing the created <code>OverlayRef</code> and a decorated reference.</p>\n"
                    }
                ]
            },
            {
                "name": "createRefInjector",
                "file": "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Creates an injector with the specified providers and a parent injector.</p>\n",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1760,
                            "end": 1768,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "injector"
                        },
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1754,
                            "end": 1759,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The parent injector.</li>\n</ul>\n"
                    },
                    {
                        "tagName": {
                            "pos": 1960,
                            "end": 1967,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "returns"
                        },
                        "comment": "<p>The created injector.</p>\n"
                    }
                ]
            },
            {
                "name": "generateFlexiblePosition",
                "file": "libs/web/features/dialog/src/lib/utils/overlay-position-builder.util.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Generates a flexible connected position strategy for an overlay.</p>\n",
                "args": [
                    {
                        "name": "builder",
                        "type": "OverlayPositionBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "target",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "connectedPositions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "FlexibleConnectedPositionStrategy",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 876,
                            "end": 883,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "builder"
                        },
                        "type": "OverlayPositionBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 870,
                            "end": 875,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The OverlayPositionBuilder used to create the position strategy.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 961,
                            "end": 967,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "target"
                        },
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 955,
                            "end": 960,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The target element to which the overlay will be connected. This can be an ElementRef or an Element.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 1080,
                            "end": 1098,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "connectedPositions"
                        },
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1074,
                            "end": 1079,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>An array of ConnectedPosition objects that define the preferred positions for the overlay.</li>\n</ul>\n"
                    },
                    {
                        "tagName": {
                            "pos": 1196,
                            "end": 1203,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "returns"
                        },
                        "comment": "<p>A FlexibleConnectedPositionStrategy configured with the specified positions.</p>\n"
                    }
                ]
            },
            {
                "name": "generateGlobalCenterPosition",
                "file": "libs/web/features/dialog/src/lib/utils/overlay-position-builder.util.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Generates a global center position strategy for an overlay.</p>\n<p>This function uses the provided <code>OverlayPositionBuilder</code> to create a <code>GlobalPositionStrategy</code> that centers the overlay both horizontally\nand vertically on the screen.</p>\n",
                "args": [
                    {
                        "name": "builder",
                        "type": "OverlayPositionBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "GlobalPositionStrategy",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 453,
                            "end": 460,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "builder"
                        },
                        "type": "OverlayPositionBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 447,
                            "end": 452,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The <code>OverlayPositionBuilder</code> used to create the position strategy.</li>\n</ul>\n"
                    },
                    {
                        "tagName": {
                            "pos": 534,
                            "end": 541,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "returns"
                        },
                        "comment": "<p>A <code>GlobalPositionStrategy</code> that centers the overlay on the screen.</p>\n"
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "ClassType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string | string[] | Set<string> | literal type",
                "file": "libs/shared/src/lib/types/class.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "libs/web/uis/src/lib/styles/color.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 199
            },
            {
                "name": "ColorStyleMapperType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "libs/web/uis/src/lib/utils/color.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 200
            },
            {
                "name": "DecorateRefBuilder",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Type definition for a function that decorates a reference builder.</p>\n",
                "kind": 184
            },
            {
                "name": "DialogType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "DialogComponentConfig | DefaultDialogConfig",
                "file": "libs/web/features/dialog/src/lib/models/dialog-config.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Represents the configuration type for a dialog.\nIt can be either a <code>DialogComponentConfig</code> or a <code>DefaultDialogConfig</code>.</p>\n",
                "kind": 192
            },
            {
                "name": "ProviderTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Array<Provider | StaticProvider>",
                "file": "libs/web/features/dialog/src/lib/providers/dialog.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CoreButtonComponent>",
                "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [
            {
                "name": "DialogEvent",
                "childs": [
                    {
                        "name": "Enter",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Enter"
                    },
                    {
                        "name": "Cancel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Cancel"
                    },
                    {
                        "name": "BackdropClick",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "BackdropClick"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/web/features/dialog/src/lib/models/dialog-event.enum.ts"
            }
        ],
        "groupedVariables": {
            "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts": [
                {
                    "name": "addTodolistEntity",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  `${PREFIX} Add TodolistEntity`,\n  props<{ entity: TaskEntity }>()\n)"
                },
                {
                    "name": "deleteEntity",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  `${PREFIX} Delete TodolistEntity`,\n  props<{ id: string }>()\n)"
                },
                {
                    "name": "loadTodolistEntities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${PREFIX} Load TodolistEntities`)"
                },
                {
                    "name": "loadTodolistEntitiesFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  `${PREFIX} Load TodolistEntities Failure`,\n  props<{ error: unknown }>()\n)"
                },
                {
                    "name": "loadTodolistEntitiesSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  `${PREFIX} Load TodolistEntities Success`,\n  props<{ entities: TaskEntity[] }>()\n)"
                },
                {
                    "name": "PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[TodolistEntity]'"
                },
                {
                    "name": "updateTodolistEntity",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  `${PREFIX} Update TodolistEntity`,\n  props<{ entity: TaskEntity }>()\n)"
                }
            ],
            "apps/skeleton/src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/skeleton/src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(appRoutes)],\n}"
                }
            ],
            "apps/todolist/src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/todolist/src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideStoreDevtools({\n      maxAge: 25,\n      logOnly: !devMode,\n      connectInZone: true\n    }),\n    //provideZoneChangeDetection({ eventCoalescing: true }),\n    provideExperimentalZonelessChangeDetection(),\n    provideRouter(appRoutes),\n    provideStore({ todolistEntity: todolistEntityReducer }),\n  ],\n}"
                },
                {
                    "name": "devMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/todolist/src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "true"
                }
            ],
            "apps/skeleton/src/app/app.routes.ts": [
                {
                    "name": "appRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/skeleton/src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[]"
                }
            ],
            "apps/todolist/src/app/app.routes.ts": [
                {
                    "name": "appRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/todolist/src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[]"
                }
            ],
            "libs/web/uis/src/lib/styles/color.type.ts": [
                {
                    "name": "COLORS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/uis/src/lib/styles/color.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "['blue', 'gray', 'green', 'red', 'yellow', 'purple', 'pink', 'indigo', 'white', 'black'] as const"
                }
            ],
            "libs/web/uis/src/lib/utils/color.util.ts": [
                {
                    "name": "ColorStyleMapper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/uis/src/lib/utils/color.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColorStyleMapperType",
                    "defaultValue": "COLORS.reduce((acc, key) => {\n  acc[key as Color] = {\n    borderColor: `border-${key}-500`,\n    bg: `bg-${key}-500`,\n    hoverBg: `hover:bg-${key}-700`,\n    hoverBorder: `hover:border-${key}-500`,\n  };\n  return acc;\n}, {} as ColorStyleMapperType)"
                }
            ],
            "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Danger Button',\n    variant: 'danger',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CoreButtonComponent>",
                    "defaultValue": "{\n  title: 'CoreButton',\n  component: CoreButtonComponent,\n  decorators: [\n    applicationConfig({\n      providers: [\n        importProvidersFrom(CommonModule),\n        provideAnimations(),\n      ],\n    }),\n  ],\n  argTypes: {\n    label: { control: 'text' },\n    variant: { control: 'select', options: ['primary', 'secondary', 'danger'] },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Primary Button',\n    variant: 'primary',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Secondary Button',\n    variant: 'secondary',\n  },\n}"
                }
            ],
            "libs/web/uis/src/lib/styles/default-style.const.ts": [
                {
                    "name": "DEFAULT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/uis/src/lib/styles/default-style.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"rounded-md min-w-16 min-h-8 px-3 py-2 text-sm \""
                },
                {
                    "name": "DEFAULT_BORDER_BUTTON_CLASSES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/uis/src/lib/styles/default-style.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`${DEFAULT} border border-gray-500 text-gray-500 hover:bg-gray-100 hover:text-gray-600`"
                },
                {
                    "name": "DEFAULT_BUTTON_CLASSES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/uis/src/lib/styles/default-style.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`${DEFAULT} bg-blue-500 text-white hover:bg-blue-700`"
                },
                {
                    "name": "DEFAULT_CHECKBOX_CLASSES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/uis/src/lib/styles/default-style.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"flex h-6 w-6 cursor-pointer items-center justify-center rounded-md border border-gray-500 text-white transition-all duration-200 ease-in-out peer-checked:border-gray-500 peer-checked:bg-black-200\""
                }
            ],
            "libs/web/features/dialog/src/lib/default-configs/overlay-config.const.ts": [
                {
                    "name": "DEFAULT_OVERLAY_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/features/dialog/src/lib/default-configs/overlay-config.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OverlayConfig",
                    "defaultValue": "{\n  hasBackdrop: true,\n  backdropClass: ['bg-gray-500/30'],\n  panelClass: [],\n}"
                }
            ],
            "libs/web/features/dialog/src/lib/providers/dialog.provider.ts": [
                {
                    "name": "DIALOG_COMPONENT_PROVIDER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/features/dialog/src/lib/providers/dialog.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<DialogComponentConfig>('DIALOG_COMPONENT_PROVIDER')"
                },
                {
                    "name": "DIALOG_DEFAULT_PROVIDER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/features/dialog/src/lib/providers/dialog.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<DefaultDialogConfig>('DIALOG_DEFAULT_PROVIDER')"
                }
            ],
            "apps/skeleton-e2e/src/support/app.po.ts": [
                {
                    "name": "getGreeting",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/skeleton-e2e/src/support/app.po.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => cy.get('h1')"
                }
            ],
            "apps/todolist-e2e/src/support/app.po.ts": [
                {
                    "name": "getGreeting",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/todolist-e2e/src/support/app.po.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => cy.get('h1')"
                }
            ],
            "libs/web/settings/hmr/src/lib/hmr.ts": [
                {
                    "name": "hmrBootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/settings/hmr/src/lib/hmr.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(module: any, bootstrap: () => Promise<NgModuleRef<any>>) => {\n  let ngModule: NgModuleRef<any>;\n  module.hot.accept();\n  bootstrap().then((mod) => (ngModule = mod));\n  module.hot.dispose(() => {\n    const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n    const elements = appRef.components.map((c) => c.location.nativeElement);\n    const makeVisible = createNewHosts(elements);\n    ngModule.destroy();\n    makeVisible();\n  });\n}"
                }
            ],
            "libs/lib-todolist/src/stores/signal-store/todolist.store.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/lib-todolist/src/stores/signal-store/todolist.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TodolistState",
                    "defaultValue": "{\n  selectedIds: [],\n}"
                },
                {
                    "name": "TodolistSignalStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/lib-todolist/src/stores/signal-store/todolist.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "signalStore(\n  // withDevtools is a helper function that adds the devtools to the store\n  withDevtools('todolistLocal', withGlitchTracking()),\n  withState(initialState),\n  // withUndoRedo(),\n  // withCallState is a helper function that adds a call state to the store\n  // withCallState(),\n  withEntities<TaskEntity>(),\n\n  withComputed((store) => ({\n    todoLists: computed(() => store.entities())\n  })),\n  withMethods(\n    (store) => ({\n      // fetchAllTask: () => resource<TaskEntity[], void>({\n      //   loader: () => {\n      //     const url = 'http://localhost:3000/tasks';\n      //     return fetch(url).then((response) => {\n      //       if (!response.ok) {\n      //         throw Error('error');\n      //       }\n      //       return response.json();\n      //     });\n      //   }\n      // }),\n      fetchAllTask: async () => {\n        const url = 'http://localhost:3000/tasks';\n        const data = await fetch(url);\n        if (!data.ok) {\n          throw Error('error');\n        }\n        return await data.json() as TaskEntity[];\n      },\n\n      // addEntity: Adds an entity to the collection.\n      // If the entity collection has an entity with the same ID, it is not overridden and no error is thrown.\n      addTodo(todo: TaskEntity): void {\n        patchState(store, addEntity(todo));\n      },\n\n      addTodos(todos: TaskEntity[]): void {\n        // updateState is a wrapper around patchState and has an action name as second parameter\n        updateState(store, 'AddTodos', addEntities(todos));\n      },\n\n      // setEntity: Adds or replaces an entity in the collection.\n      Todo(todo: TaskEntity): void {\n        patchState(store, setEntity(todo));\n      },\n\n      setTodos(todos: TaskEntity[]): void {\n        patchState(store, setEntities(todos));\n      },\n\n      updateTodoName(updateTodo: TaskEntity): void {\n        patchState(store, updateEntity({\n          id: updateTodo.id,\n          changes: (todo) => ({ ...todo, name: updateTodo.name })\n        }));\n      },\n\n      deleteTodo(todo: TaskEntity): void {\n        // patchState(store, removeEntity(todo.id));\n        patchState(store, (state) => {\n          return {\n            ...removeEntity(todo.id)(state),\n            selectedIds: state.selectedIds.filter((selectedId) => selectedId !== todo.id),\n          };\n        });\n      },\n\n      // remove all todos that are empty\n      removeEmptyTodos(): void {\n        patchState(store, removeEntities(({ name }) => !name));\n      },\n\n      // complete all todos\n      completeAllTodos(completed: boolean): void {\n        patchState(store, updateEntities({\n          ids: store.selectedIds(),\n          changes: { completed }\n        }));\n      },\n\n      addSelected(id: string): void {\n        patchState(store, {\n          selectedIds: [...store.selectedIds(), id]\n        });\n      },\n      removeSelected(id: string): void {\n        patchState(store, {\n          selectedIds: [...store.selectedIds().filter((selectedId) => selectedId !== id)]\n        });\n      },\n\n    }),\n\n  ),\n  withHooks({\n    onInit(store) {\n      store.fetchAllTask().then(tasks => {\n        store.addTodos(tasks);\n      }).catch(error => {\n        console.error('Failed to fetch tasks:', error);\n      });\n    }\n  }),\n)"
                }
            ],
            "libs/stores/todolist-store/src/lib/states/todolist.entity.state.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TodolistEntityState",
                    "defaultValue": "{\n  ids: [],\n  entities: {},\n  selected: []\n}"
                }
            ],
            "libs/web/features/dialog/src/lib/mocks/mock-config.const.ts": [
                {
                    "name": "MOCK_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/features/dialog/src/lib/mocks/mock-config.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DefaultDialogConfig",
                    "defaultValue": "{\n  injectorID: 'a1',\n  title: 'Dialog Default Title',\n  // content: 'Dialog Content',\n  contentClasses: ['bg-gray-200'],\n  contentComponent: () => WebFeatureMockNoInjectorComponent,\n  btns: [\n    {\n      type: DialogEvent.Enter,\n      displayName: 'Enter',\n      classes: ['outline-none', 'text-base', 'border', 'px-2', 'py-1', 'rounded-md', 'border-red-400', 'bg-pink-200', 'transition-colors', 'hover:bg-pink-300']\n    },\n    {\n      type: DialogEvent.Cancel,\n      displayName: 'Close',\n      classes: ['outline-none', 'text-base', 'border', 'px-2', 'py-1', 'rounded-md', 'border-blue-400', 'bg-blue-200', 'transition-colors', 'hover:bg-blue-300']\n    }\n  ],\n  overlayConfig: DEFAULT_OVERLAY_CONFIG,\n}"
                },
                {
                    "name": "MOCK_CONFIG2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/web/features/dialog/src/lib/mocks/mock-config.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogComponentConfig",
                    "defaultValue": "{\n  injectorID: 'a2',\n  componentRef: () => WebFeatureMockComponent,\n  overlayConfig: DEFAULT_OVERLAY_CONFIG,\n  data: {\n    test: 'hello world'\n  }\n}"
                }
            ],
            "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts": [
                {
                    "name": "selectTodolistState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<TodolistEntityState>(TODOLIST_FEATURE_NAME)"
                },
                {
                    "name": "TODOLIST_FEATURE_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'todolistEntity'"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "todolistEntityAdapter.getSelectors(selectTodolistState)"
                }
            ],
            "libs/stores/todolist-store/src/lib/states/todolist.entity.adaptor.ts": [
                {
                    "name": "todolistEntityAdapter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.adaptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EntityAdapter<TaskEntity>",
                    "defaultValue": "createEntityAdapter<TaskEntity>({\n    selectId: (task: TaskEntity) => task.id,\n    sortComparer: (a: TaskEntity, b: TaskEntity) => a.name.localeCompare(b.name)\n  })"
                }
            ],
            "libs/stores/todolist-store/src/lib/states/todolist.entity.reducer.ts": [
                {
                    "name": "todolistEntityReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/stores/todolist-store/src/lib/states/todolist.entity.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(loadTodolistEntitiesSuccess, (state, { entities }) => todolistEntityAdapter.setAll(entities, state)),\n  on(addTodolistEntity, (state, { entity }) => todolistEntityAdapter.addOne(entity, state)),\n  on(updateTodolistEntity, (state, { entity }) => todolistEntityAdapter.updateOne({ id: entity.id, changes: entity }, state)),\n  on(deleteEntity, (state, { id }) => todolistEntityAdapter.removeOne(id, state)),\n)"
                }
            ]
        },
        "groupedFunctions": {
            "libs/web/uis/src/lib/utils/color.util.ts": [
                {
                    "name": "colorTransform",
                    "file": "libs/web/uis/src/lib/utils/color.util.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "color",
                            "type": "Color",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ColorStyle",
                    "jsdoctags": [
                        {
                            "name": "color",
                            "type": "Color",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts": [
                {
                    "name": "createRefBuilder",
                    "file": "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Creates a reference builder function that can be used to create overlay references with a specified configuration and position strategy.</p>\n",
                    "args": [
                        {
                            "name": "builder",
                            "type": "OverlayPositionBuilder",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "overlay",
                            "type": "Overlay",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "DecorateRefBuilder",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 922,
                                "end": 929,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "builder"
                            },
                            "type": "OverlayPositionBuilder",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 916,
                                "end": 921,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The <code>OverlayPositionBuilder</code> instance used to generate position strategies.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 1018,
                                "end": 1025,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "overlay"
                            },
                            "type": "Overlay",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1012,
                                "end": 1017,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The <code>Overlay</code> instance used to create overlay references.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1090,
                                "end": 1097,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A function that takes an overlay configuration and an optional position strategy, and returns an object containing the created <code>OverlayRef</code> and a decorated reference.</p>\n"
                        }
                    ]
                },
                {
                    "name": "createRefInjector",
                    "file": "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Creates an injector with the specified providers and a parent injector.</p>\n",
                    "args": [
                        {
                            "name": "injector",
                            "type": "Injector",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1760,
                                "end": 1768,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "injector"
                            },
                            "type": "Injector",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1754,
                                "end": 1759,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The parent injector.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1960,
                                "end": 1967,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The created injector.</p>\n"
                        }
                    ]
                }
            ],
            "libs/web/features/dialog/src/lib/utils/overlay-position-builder.util.ts": [
                {
                    "name": "generateFlexiblePosition",
                    "file": "libs/web/features/dialog/src/lib/utils/overlay-position-builder.util.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Generates a flexible connected position strategy for an overlay.</p>\n",
                    "args": [
                        {
                            "name": "builder",
                            "type": "OverlayPositionBuilder",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "target",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "connectedPositions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "FlexibleConnectedPositionStrategy",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 876,
                                "end": 883,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "builder"
                            },
                            "type": "OverlayPositionBuilder",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 870,
                                "end": 875,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The OverlayPositionBuilder used to create the position strategy.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 961,
                                "end": 967,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "target"
                            },
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 955,
                                "end": 960,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The target element to which the overlay will be connected. This can be an ElementRef or an Element.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 1080,
                                "end": 1098,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "connectedPositions"
                            },
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1074,
                                "end": 1079,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>An array of ConnectedPosition objects that define the preferred positions for the overlay.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1196,
                                "end": 1203,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A FlexibleConnectedPositionStrategy configured with the specified positions.</p>\n"
                        }
                    ]
                },
                {
                    "name": "generateGlobalCenterPosition",
                    "file": "libs/web/features/dialog/src/lib/utils/overlay-position-builder.util.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Generates a global center position strategy for an overlay.</p>\n<p>This function uses the provided <code>OverlayPositionBuilder</code> to create a <code>GlobalPositionStrategy</code> that centers the overlay both horizontally\nand vertically on the screen.</p>\n",
                    "args": [
                        {
                            "name": "builder",
                            "type": "OverlayPositionBuilder",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "GlobalPositionStrategy",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 453,
                                "end": 460,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "builder"
                            },
                            "type": "OverlayPositionBuilder",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 447,
                                "end": 452,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The <code>OverlayPositionBuilder</code> used to create the position strategy.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 534,
                                "end": 541,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A <code>GlobalPositionStrategy</code> that centers the overlay on the screen.</p>\n"
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "libs/web/features/dialog/src/lib/models/dialog-event.enum.ts": [
                {
                    "name": "DialogEvent",
                    "childs": [
                        {
                            "name": "Enter",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Enter"
                        },
                        {
                            "name": "Cancel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Cancel"
                        },
                        {
                            "name": "BackdropClick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "BackdropClick"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/web/features/dialog/src/lib/models/dialog-event.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "libs/shared/src/lib/types/class.type.ts": [
                {
                    "name": "ClassType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string | string[] | Set<string> | literal type",
                    "file": "libs/shared/src/lib/types/class.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "libs/web/uis/src/lib/styles/color.type.ts": [
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "libs/web/uis/src/lib/styles/color.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 199
                }
            ],
            "libs/web/uis/src/lib/utils/color.util.ts": [
                {
                    "name": "ColorStyleMapperType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "libs/web/uis/src/lib/utils/color.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 200
                }
            ],
            "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts": [
                {
                    "name": "DecorateRefBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Type definition for a function that decorates a reference builder.</p>\n",
                    "kind": 184
                }
            ],
            "libs/web/features/dialog/src/lib/models/dialog-config.model.ts": [
                {
                    "name": "DialogType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "DialogComponentConfig | DefaultDialogConfig",
                    "file": "libs/web/features/dialog/src/lib/models/dialog-config.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Represents the configuration type for a dialog.\nIt can be either a <code>DialogComponentConfig</code> or a <code>DefaultDialogConfig</code>.</p>\n",
                    "kind": 192
                }
            ],
            "libs/web/features/dialog/src/lib/providers/dialog.provider.ts": [
                {
                    "name": "ProviderTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Array<Provider | StaticProvider>",
                    "file": "libs/web/features/dialog/src/lib/providers/dialog.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CoreButtonComponent>",
                    "file": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 8,
        "status": "low",
        "files": [
            {
                "filePath": "apps/skeleton-e2e/src/support/app.po.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getGreeting",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/skeleton-e2e/src/support/commands.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Chainable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "apps/skeleton/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "apps/skeleton/src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/skeleton/src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/skeleton/src/app/nx-welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NxWelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/todolist-e2e/src/support/app.po.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getGreeting",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/todolist-e2e/src/support/commands.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Chainable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "apps/todolist/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/todolist/src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/todolist/src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "devMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/todolist/src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/todolist/src/app/nx-welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NxWelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core-ui-kit/src/buttons/core-button/core-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoreButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core-ui-kit/src/buttons/core-button/core-button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/lib-todolist/src/features/task-component/task-component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskComponentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "libs/lib-todolist/src/features/todolist/todolist.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodolistComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/lib-todolist/src/stores/models/task.entity.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TaskEntity",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/lib-todolist/src/stores/models/todolist.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TodolistState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/lib-todolist/src/stores/signal-store/todolist.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/lib-todolist/src/stores/signal-store/todolist.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TodolistSignalStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/lib-todolist/src/uis/todolist-footer/todolist-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodolistFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/shared/src/lib/directives/click-debounce-stop-propagation.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ClickDebounceStopPropagationDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/shared/src/lib/directives/click-debounce.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ClickDebounceDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/shared/src/lib/directives/content-container.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ContentContainerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/shared/src/lib/directives/tool-tip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/shared/src/lib/events/web-event.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WebEvent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/shared/src/lib/types/class.type.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ClassType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/models/task.entity.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TaskEntity",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addTodolistEntity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteEntity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadTodolistEntities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadTodolistEntitiesFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadTodolistEntitiesSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateTodolistEntity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.adaptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "todolistEntityAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "todolistEntityReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectTodolistState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TODOLIST_FEATURE_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TodolistEntityState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/stores/todolist-store/src/lib/states/todolist.entity.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/decorate-overlay-ref.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DecorateOverlayRef",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/default-configs/overlay-config.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_OVERLAY_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/mocks/mock-config.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOCK_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/mocks/mock-config.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOCK_CONFIG2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/models/dialog-config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DefaultDialogConfig",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/models/dialog-config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogBtnSetting",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/models/dialog-config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogComponentConfig",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/models/dialog-config.model.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "DialogType",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/providers/dialog.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIALOG_COMPONENT_PROVIDER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/providers/dialog.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIALOG_DEFAULT_PROVIDER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/providers/dialog.provider.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ProviderTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/services/dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DialogService",
                "coveragePercent": 62,
                "coverageCount": "5/8",
                "status": "good"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/utils/overlay-position-builder.util.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateFlexiblePosition",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/utils/overlay-position-builder.util.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateGlobalCenterPosition",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createRefBuilder",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createRefInjector",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/utils/overlay-ref-builder.util.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "DecorateRefBuilder",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/web-features-dialog/web-features-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebFeaturesDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/web-features-mock/web-features-mock-no-injector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebFeatureMockNoInjectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/web/features/dialog/src/lib/web-features-mock/web-features-mock.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebFeatureMockComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/web/settings/hmr/src/lib/hmr.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hmrBootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/buttons/web-border-button/web-border-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebBorderButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/buttons/web-button/web-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/styles/color.type.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COLORS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/styles/color.type.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Color",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/styles/default-style.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/styles/default-style.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_BORDER_BUTTON_CLASSES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/styles/default-style.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_BUTTON_CLASSES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/styles/default-style.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_CHECKBOX_CLASSES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/utils/color.util.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ColorStyle",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/utils/color.util.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "colorTransform",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/utils/color.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorStyleMapper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/web/uis/src/lib/utils/color.util.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ColorStyleMapperType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}